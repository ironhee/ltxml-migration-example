{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cc4e329d2af79d930ad2","webpack:///./lib/ltxml.js","webpack:///external {\"root\":\"Enumerable\",\"amd\":\"linq\",\"commonjs\":\"linq\",\"commonjs2\":\"linq\"}","webpack:///./~/xmldom/dom-parser.js","webpack:///./~/xmldom/sax.js","webpack:///./~/xmldom/dom.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,wEAAuE;AACvE;AACA;;AAEA;AACA,6BAA4B,UAAU,EAAE;AACxC,wBAAuB,aAAa,EAAE;AACtC,yBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB,wBAAwB,aAAa,EAAE;AAChE,iCAAgC,2BAA2B;AAC3D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA,4BAA2B,cAAc;AACzC;AACA;AACA,cAAa;AACb;AACA,4BAA2B,eAAe;AAC1C;AACA;AACA,cAAa;AACb;AACA,4BAA2B,eAAe;AAC1C;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACbcAAa,2BAA2B;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gFAA+E;AAC/E,8CAA6C;AAC7C;AACA;AACA;AACA,oCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B,wCAAwC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,sCAAsC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA,gBAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,wBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA,4BAA2B;;AAE3B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,uBAAsB,yBAAyB,EAAE;AACjD,sBAAqB,uCAAuC,EAAE;AAC9D;AACA;AACA;AACA;AACA,gBAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,uBAAsB,yBAAyB,EAAE;AACjD,sBAAqB,wCAAwC,EAAE;AAC/D;AACA;AACA;AACA;AACA,gBAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,4BAA2B,qCAAqC,EAAE;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,uBAAsB,yBAAyB,EAAE;AACjD,sBAAqB,sCAAsC,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;;AAEA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;;AAEA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,iCAAiC,EAAE;AAChE;AACA,uDAAsD,yBAAyB,EAAE;AACjF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,iCAAiC,EAAE;AAChE;AACA,uDAAsD,yBAAyB,EAAE;AACjF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,iCAAiC,EAAE;AAChE;AACA;AACA,uDAAsD,yBAAyB,EAAE;AACjF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iCAAgC;;AAEhC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,uBAAsB,uBAAuB,EAAE;AAC/C,uBAAsB,4BAA4B,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,uBAAsB,uBAAuB,EAAE;AAC/C,uBAAsB,4BAA4B,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA,uBAAsB,uBAAuB,EAAE;AAC/C,uBAAsB,4BAA4B,EAAE;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,+CAA8C,gBAAgB,EAAE;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT,iCAAgC,oCAAoC,EAAE;AACtE;AACA,uDAAsD,yBAAyB,EAAE;AACjF;AACA;AACA;;AAEA;AACA;;AAEA,gBAAe,iCAAiC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB,EAAE;AACvE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,8BAA6B,iCAAiC,EAAE;AAChE;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,kEAAiE;AACjE,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,mBAAmB,EAAE;AACvD,kCAAiC,wBAAwB,EAAE;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,uCAAsC,oBAAoB,EAAE;AAC5D,sCAAqC,wBAAwB,EAAE;AAC/D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA,+BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C,6BAA4B,oBAAoB;AAChD,+BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB,EAAE;AACvE;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,mBAAmB,EAAE;AACvD,mCAAkC,kBAAkB,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,mCAAkC,oBAAoB,EAAE;AACxD,mCAAkC,mBAAmB,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iCAAiC;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,yBAAyB,EAAE;AACxD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,2CAA2C,EAAE;AACpF;AACA;AACA;AACA;AACA,gDAA+C,uBAAuB,EAAE;AACxE;AACA;AACA;AACA;AACA,+BAA8B,gCAAgC;AAC9D;AACA;AACA;AACA,+BAA8B,iBAAiB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD,4BAA4B;AACjF,uDAAsD,cAAc,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,iCAAiC,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,iCAAiC,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB;AACrE,sBAAqB;AACrB;AACA;AACA;AACA;AACA,oCAAmC,iCAAiC,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,UAAU,gBAAgB,EAAE;AAC3D;AACA;AACA,gCAA+B,gBAAgB,EAAE;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B,iCAAiC,EAAE;AAChE;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,uBAAsB,yBAAyB,EAAE;AACjD,sBAAqB,qCAAqC,EAAE;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,sBAAqB,4CAA4C,EAAE;AACnE,uBAAsB,yBAAyB,EAAE;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,+BAA8B,gBAAgB,EAAE;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,sDAAqD,gBAAgB,EAAE;AACvE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB,EAAE;AACvE;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAqC;AACrC;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChtHA,gD;;;;;;ACAA;AACA,4BAA2B;;AAE3B;AACA,iE;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,mBAAmB;AAChE,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA,iCAAgC;AAChC;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE,KAAK;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,EAAC;;AAED,mHAAkH;AAClH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd,gBAAe;AACf,gBAAe;AACf,cAAa;AACb,aAAY;AACZ,aAAY;AACZ,aAAY;AACZ,aAAY;;AAEZ;;AAEA;;AAEA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,wB;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,oBAAmB,MAAM;AACzB;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,KAAI;AACJ,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,KAAI,KAAK;AACT;AACA;AACA;AACA,yBAAwB;AACxB,0BAAyB;AACzB,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,KAAI;AACJ;;AAEA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI,GAAG,KAAK;AACZ,iCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AACA;AACA;AACA,uBAAsB;AACtB;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,KAAK;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,0BAAyB;AACzB,GAAE;AACF;AACA,2BAA0B,yBAAyB;AACnD,wBAAuB,sBAAsB;AAC7C,uBAAsB,qBAAqB;AAC3C,qBAAoB,mBAAmB;AACvC,uBAAsB;AACtB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;AACJ,wBAAuB,0DAA0D;AACjF;AACA,yBAAwB;AACxB;;;;;AAKA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACtkBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,oBAAoB,YAAY,QAAQ;AAChF,4CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mLAAkL;AAClL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;;AAGA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,GAAE;AACF;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA,GAAE;AACF,4CAA2C;AAC3C;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,0BAAyB;AACzB,2BAA0B;AAC1B,4BAA2B;AAC3B,6BAA4B;AAC5B,gCAA+B;AAC/B;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,UAAS;AACT;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,IAAG;AACH,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,IAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,SAAS;AACV;;AAEA;AACA;AACA;AACA","file":"ltxml.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"linq\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"linq\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ltxml\"] = factory(require(\"linq\"));\n\telse\n\t\troot[\"Ltxml\"] = factory(root[\"Enumerable\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cc4e329d2af79d930ad2\n **/","\"use strict\";\n\nvar Enumerable = require(\"linq\");\n\nvar parseXml, Functions, Ltxml, addContentThatCanContainEntities,\n    serializeAttributeContent, annotateRootForNamespaces,\n    prefixCounter, entityCodePoints, entities;\n\n/********************** utility **********************/\n\n// if using JQuery\n// Enumerable = $.Enumerable;\n\nif (!Array.isArray) {\n    Array.isArray = function (arg) {\n        return Object.prototype.toString.call(arg) == '[object Array]'; //ignore jslint\n    };\n}\n\nFunctions = {\n    Identity: function (x) { return x; },\n    True: function () { return true; },\n    Blank: function () { }\n};\n\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (item) {\n        var i;\n\n        for (i = 0; i < this.length; i += 1) {\n            if (this[i] === item) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\n/*ignore jslint start*/\nparseXml = function (xmlStr) {\n    var domParser;\n\n    if (typeof Ltxml.DOMParser !== \"undefined\") {\n        domParser = (new Ltxml.DOMParser()).parseFromString(xmlStr, \"application/xml\");\n        return domParser;\n    }\n    else if (typeof global.DOMParser !== \"undefined\") {\n        //domParser = (new global.DOMParser()).parseFromString(xmlStr, \"text/xml\");\n        domParser = (new global.DOMParser()).parseFromString(xmlStr, \"application/xml\");\n        return domParser;\n    } else if (typeof global.ActiveXObject !== \"undefined\" &&\n\t\t        new global.ActiveXObject(\"Microsoft.XMLDOM\")) {\n        var xmlDoc = new global.ActiveXObject(\"Microsoft.XMLDOM\");\n        xmlDoc.async = \"false\";\n        xmlDoc.loadXML(xmlStr);\n        return xmlDoc;\n    } else {\n        var xmldom = require(\"xmldom\");\n        var xmlDoc = (new xmldom.DOMParser().parseFromString(xmlStr, \"application/xml\"));\n        return xmlDoc;\n    }\n};\n/*ignore jslint end*/\n\n/********************** global **********************/\n\nLtxml = {};  // container(namespace)\n\nLtxml.namespaceCache = {};\nLtxml.nameCache = {};\nLtxml.spaces = '                                             ' +\n    '                                             ';\nfunction getStringBuilder() {\n    var data, counter;\n\n    data = [];\n    counter = 0;\n    return {\n        a: function (s) { data[counter += 1] = s; return this; },  //ignore jslint\n        toString: function (s) { return data.join(s || \"\"); }\n    };\n}\n\nLtxml.clearCache = function () {\n    this.namespaceCache = {};\n    this.nameCache = {};\n};\n\nLtxml.cast = function (elementOrAttribute) {\n    if (!elementOrAttribute) {\n        return null;\n    }\n    return elementOrAttribute.value;\n};\n\nLtxml.castInt = function (elementOrAttribute) {\n    if (!elementOrAttribute) {\n        return null;\n    }\n    return parseInt(elementOrAttribute.value, 10);\n};\n\nfunction addContent(xobj, putContentFunc, putAttributeFunc) {\n    var t, ta, newEl, newTx, newCo, newCd, newAt, newPi, i, j, k;\n\n    for (i = 3; i < arguments.length; i += 1) {\n        t = arguments[i];\n        if (t !== null && t !== undefined) {\n            if (Array.isArray(t)) {\n                for (j = 0; j < t.length; j += 1) {\n                    addContent(xobj, putContentFunc, putAttributeFunc, t[j]);\n                }\n            } else if (t.select) {\n                ta = t.toArray();\n                for (k = 0; k < ta.length; k += 1) {\n                    addContent(xobj, putContentFunc, putAttributeFunc, ta[k]);\n                }\n            } else if (t.isXEnumerable) {\n                ta = t.asEnumerable().toArray();\n                for (k = 0; k < ta.length; k += 1) {\n                    addContent(xobj, putContentFunc, putAttributeFunc, ta[k]);\n                }\n            } else if (typeof t === 'object' && t.nodeType) {\n                if (t.nodeType === 'Element' ||\n                        t.nodeType === 'Text' ||\n                        t.nodeType === 'Comment' ||\n                        t.nodeType === 'CDATA' ||\n                        t.nodeType === 'ProcessingInstruction' ||\n                        t.nodeType === 'Entity') {\n                    if (t.parent && t.parent !== null) {\n                        // then need to clone\n                        if (t.nodeType === 'Element') {\n                            newEl = new Ltxml.XElement(t);\n                            newEl.parent = xobj;\n                            putContentFunc(newEl);\n                            return;\n                        }\n                        if (t.nodeType === 'Entity') {\n                            newTx = new Ltxml.XEntity(t);\n                            newTx.parent = xobj;\n                            putContentFunc(newTx);\n                            return;\n                        }\n                        if (t.nodeType === 'Text') {\n                            newTx = new Ltxml.XText(t);\n                            newTx.parent = xobj;\n                            putContentFunc(newTx);\n                            return;\n                        }\n                        if (t.nodeType === 'Comment') {\n                            newCo = new Ltxml.XComment(t);\n                            newCo.parent = xobj;\n                            putContentFunc(newCo);\n                            return;\n                        }\n                        if (t.nodeType === 'CDATA') {\n                            newCd = new Ltxml.XCData(t);\n                            newCd.parent = xobj;\n                            putContentFunc(newCd);\n                            return;\n                        }\n                        if (t.nodeType === 'ProcessingInstruction') {\n                            newPi = new Ltxml.XProcessingInstruction(t);\n                            newPi.parent = xobj;\n                            putContentFunc(newPi);\n                            return;\n                        }\n                    }\n                    t.parent = xobj;\n                    putContentFunc(t);\n                    return;\n                }\n                if (t.nodeType === 'Attribute') {\n                    if (t.parent && t.parent !== null) {\n                        // then need to clone\n                        newAt = new Ltxml.XAttribute(t);\n                        newAt.parent = xobj;\n                        putAttributeFunc(newAt);\n                        return;\n                    }\n                    t.parent = xobj;\n                    putAttributeFunc(t);\n                    return;\n                }\n            } else {\n                if (typeof t === 'string' && t === '') {\n                    newTx = new Ltxml.XText('');\n                    newTx.parent = xobj;\n                    putContentFunc(newTx);\n                    return;\n                }\n                addContentThatCanContainEntities(t.toString(), xobj, true, putContentFunc);\n            }\n        }\n    }\n}\n\nentityCodePoints = [\n    60,\n    62,\n    39,\n    34,\n    38\n/*,\n160,\n161,\n162,\n163,\n164,\n165,\n166,\n167,\n168,\n169,\n170,\n171,\n172,\n173,\n174,\n175,\n176,\n177,\n178,\n179,\n180,\n181,\n182,\n183,\n184,\n185,\n186,\n187,\n188,\n189,\n190,\n191,\n192,\n193,\n194,\n195,\n196,\n197,\n198,\n199,\n200,\n201,\n202,\n203,\n204,\n205,\n206,\n207,\n208,\n209,\n210,\n211,\n212,\n213,\n214,\n215,\n216,\n217,\n218,\n219,\n220,\n221,\n222,\n223,\n224,\n225,\n226,\n227,\n228,\n229,\n230,\n231,\n232,\n233,\n234,\n235,\n236,\n237,\n238,\n239,\n240,\n241,\n242,\n243,\n244,\n245,\n246,\n247,\n248,\n249,\n250,\n251,\n252,\n253,\n254,\n255,\n338,\n339,\n352,\n353,\n376,\n402,\n710,\n732,\n913,\n914,\n915,\n916,\n917,\n918,\n919,\n920,\n921,\n922,\n923,\n924,\n925,\n926,\n927,\n928,\n929,\n931,\n932,\n933,\n934,\n935,\n936,\n937,\n945,\n946,\n947,\n948,\n949,\n950,\n951,\n952,\n953,\n954,\n955,\n956,\n957,\n958,\n959,\n960,\n961,\n962,\n963,\n964,\n965,\n966,\n967,\n968,\n969,\n977,\n978,\n982,\n8194,\n8195,\n8201,\n8204,\n8205,\n8206,\n8207,\n8211,\n8212,\n8216,\n8217,\n8218,\n8220,\n8221,\n8222,\n8224,\n8225,\n8226,\n8230,\n8240,\n8242,\n8243,\n8249,\n8250,\n8254,\n8260,\n8364,\n8465,\n8472,\n8476,\n8482,\n8501,\n8592,\n8593,\n8594,\n8595,\n8596,\n8629,\n8656,\n8657,\n8658,\n8659,\n8660,\n8704,\n8706,\n8707,\n8709,\n8711,\n8712,\n8713,\n8715,\n8719,\n8721,\n8722,\n8727,\n8730,\n8733,\n8734,\n8736,\n8743,\n8744,\n8745,\n8746,\n8747,\n8756,\n8764,\n8773,\n8776,\n8800,\n8801,\n8804,\n8805,\n8834,\n8835,\n8836,\n8838,\n8839,\n8853,\n8855,\n8869,\n8901,\n8968,\n8969,\n8970,\n8971,\n9001,\n9002,\n9674,\n9824,\n9827,\n9829,\n9830 */\n];\n\nentities = [\n    \"lt\",\n    \"gt\",\n    \"apos\",\n    \"quot\",\n    \"amp\"\n/*,\n\"nbsp\",\n\"iexcl\",\n\"cent\",\n\"pound\",\n\"curren\",\n\"yen\",\n\"brvbar\",\n\"sect\",\n\"uml\",\n\"copy\",\n\"ordf\",\n\"laquo\",\n\"not\",\n\"shy\",\n\"reg\",\n\"macr\",\n\"deg\",\n\"plusmn\",\n\"sup2\",\n\"sup3\",\n\"acute\",\n\"micro\",\n\"para\",\n\"middot\",\n\"cedil\",\n\"sup1\",\n\"ordm\",\n\"raquo\",\n\"frac14\",\n\"frac12\",\n\"frac34\",\n\"iquest\",\n\"Agrave\",\n\"Aacute\",\n\"Acirc\",\n\"Atilde\",\n\"Auml\",\n\"Aring\",\n\"AElig\",\n\"Ccedil\",\n\"Egrave\",\n\"Eacute\",\n\"Ecirc\",\n\"Euml\",\n\"Igrave\",\n\"Iacute\",\n\"Icirc\",\n\"Iuml\",\n\"ETH\",\n\"Ntilde\",\n\"Ograve\",\n\"Oacute\",\n\"Ocirc\",\n\"Otilde\",\n\"Ouml\",\n\"times\",\n\"Oslash\",\n\"Ugrave\",\n\"Uacute\",\n\"Ucirc\",\n\"Uuml\",\n\"Yacute\",\n\"THORN\",\n\"szlig\",\n\"agrave\",\n\"aacute\",\n\"acirc\",\n\"atilde\",\n\"auml\",\n\"aring\",\n\"aelig\",\n\"ccedil\",\n\"egrave\",\n\"eacute\",\n\"ecirc\",\n\"euml\",\n\"igrave\",\n\"iacute\",\n\"icirc\",\n\"iuml\",\n\"eth\",\n\"ntilde\",\n\"ograve\",\n\"oacute\",\n\"ocirc\",\n\"otilde\",\n\"ouml\",\n\"divide\",\n\"oslash\",\n\"ugrave\",\n\"uacute\",\n\"ucirc\",\n\"uuml\",\n\"yacute\",\n\"thorn\",\n\"yuml\",\n\"OElig\",\n\"oelig\",\n\"Scaron\",\n\"scaron\",\n\"Yuml\",\n\"fnof\",\n\"circ\",\n\"tilde\",\n\"Alpha\",\n\"Beta\",\n\"Gamma\",\n\"Delta\",\n\"Epsilon\",\n\"Zeta\",\n\"Eta\",\n\"Theta\",\n\"Iota\",\n\"Kappa\",\n\"Lambda\",\n\"Mu\",\n\"Nu\",\n\"Xi\",\n\"Omicron\",\n\"Pi\",\n\"Rho\",\n\"Sigma\",\n\"Tau\",\n\"Upsilon\",\n\"Phi\",\n\"Chi\",\n\"Psi\",\n\"Omega\",\n\"alpha\",\n\"beta\",\n\"gamma\",\n\"delta\",\n\"epsilon\",\n\"zeta\",\n\"eta\",\n\"theta\",\n\"iota\",\n\"kappa\",\n\"lambda\",\n\"mu\",\n\"nu\",\n\"xi\",\n\"omicron\",\n\"pi\",\n\"rho\",\n\"sigmaf\",\n\"sigma\",\n\"tau\",\n\"upsilon\",\n\"phi\",\n\"chi\",\n\"psi\",\n\"omega\",\n\"thetasym\",\n\"upsih\",\n\"piv\",\n\"ensp\",\n\"emsp\",\n\"thinsp\",\n\"zwnj\",\n\"zwj\",\n\"lrm\",\n\"rlm\",\n\"ndash\",\n\"mdash\",\n\"lsquo\",\n\"rsquo\",\n\"sbquo\",\n\"ldquo\",\n\"rdquo\",\n\"bdquo\",\n\"dagger\",\n\"Dagger\",\n\"bull\",\n\"hellip\",\n\"permil\",\n\"prime\",\n\"Prime\",\n\"lsaquo\",\n\"rsaquo\",\n\"oline\",\n\"frasl\",\n\"euro\",\n\"image\",\n\"weierp\",\n\"real\",\n\"trade\",\n\"alefsym\",\n\"larr\",\n\"uarr\",\n\"rarr\",\n\"darr\",\n\"harr\",\n\"crarr\",\n\"lArr\",\n\"uArr\",\n\"rArr\",\n\"dArr\",\n\"hArr\",\n\"forall\",\n\"part\",\n\"exist\",\n\"empty\",\n\"nabla\",\n\"isin\",\n\"notin\",\n\"ni\",\n\"prod\",\n\"sum\",\n\"minus\",\n\"lowast\",\n\"radic\",\n\"prop\",\n\"infin\",\n\"ang\",\n\"and\",\n\"or\",\n\"cap\",\n\"cup\",\n\"int\",\n\"there4\",\n\"sim\",\n\"cong\",\n\"asymp\",\n\"ne\",\n\"equiv\",\n\"le\",\n\"ge\",\n\"sub\",\n\"sup\",\n\"nsub\",\n\"sube\",\n\"supe\",\n\"oplus\",\n\"otimes\",\n\"perp\",\n\"sdot\",\n\"lceil\",\n\"rceil\",\n\"lfloor\",\n\"rfloor\",\n\"lang\",\n\"rang\",\n\"loz\",\n\"spades\",\n\"clubs\",\n\"hearts\",\n\"diams\"\n*/\n];\n\naddContentThatCanContainEntities = function (textToAdd, xobj, isElement, putContentFunc) {\n    var xt, xe, ts, tc, length, char, ind;\n\n    if (typeof textToAdd === 'string') {\n        ts = 0;\n        tc = 0;\n        length = textToAdd.length;\n        while (true) {\n            if (tc === length) {\n                break;\n            }\n            char = textToAdd.charCodeAt(tc);\n            if ((char >= 40 && char <= 59) ||\n                (char >= 63 && char <= 126)) {\n                tc++;\n                continue;\n            }\n            if (char >= 32 && char <= 126 &&\n                char !== 34 && char !== 38 && char !== 39 && char !== 60 && char !== 62) {\n                tc++;\n                continue;\n            }\n            if (char === 9 || char === 10 || char === 13) {\n                if (isElement) {\n                    tc++;\n                    continue;\n                }\n            }\n            if (char === 9 && !isElement) {\n                tc++;\n                continue;\n            }\n            if (char < 32) {\n                if (ts !== tc) {\n                    if (isElement) {\n                        xt = new Ltxml.XText(textToAdd.substring(ts, tc));\n                        xt.parent = xobj;\n                    }\n                    else {\n                        xt = textToAdd.substring(ts, tc);\n                    }\n                    putContentFunc(xt);\n                }\n                xe = new Ltxml.XEntity(\"#x\" + char.toString(16));\n                xe.parent = xobj;\n                putContentFunc(xe);\n                tc++;\n                ts = tc;\n                continue;\n            }\n            ind = entityCodePoints.indexOf(char);\n            if (ind === -1) {\n                tc++;\n                continue;\n            }\n            if (ts !== tc) {\n                if (isElement) {\n                    xt = new Ltxml.XText(textToAdd.substring(ts, tc));\n                    xt.parent = xobj;\n                }\n                else {\n                    xt = textToAdd.substring(ts, tc);\n                }\n                putContentFunc(xt);\n            }\n            xe = new Ltxml.XEntity(entities[ind]);\n            xe.parent = xobj;\n            putContentFunc(xe);\n            tc++;\n            ts = tc;\n        }\n        if (ts !== tc) {\n            if (isElement) {\n                xt = new Ltxml.XText(textToAdd.substring(ts, tc));\n                xt.parent = xobj;\n            }\n            else {\n                xt = textToAdd.substring(ts, tc);\n            }\n            putContentFunc(xt);\n        }\n        return;\n    }\n    if (isElement) {\n        xt = new Ltxml.XText(textToAdd);\n        xt.parent = xobj;\n        putContentFunc(xt);\n    }\n    else {\n        putContentFunc(textToAdd);\n    }\n    return;\n};\n\n/********************** XNamespace **********************/\n\n// takes a string, returns an atomized object\nLtxml.XNamespace = function (namespace, prefix) {\n    var namespaceCache, nso, ns;\n\n    namespaceCache = Ltxml.namespaceCache;\n\n    if (prefix === null) {\n        prefix = undefined;\n    }\n    if (namespaceCache[namespace] === undefined) {\n        nso = {\n            namespaceName: namespace,\n            preferredPrefix: prefix,\n            getName: Ltxml.XNamespace.getName,\n            toString: Ltxml.XNamespace.toString\n        };\n        namespaceCache[namespace] = nso;\n        return nso;\n    }\n    ns = namespaceCache[namespace];\n    if (!ns.preferredPrefix && prefix !== null) {\n        ns.preferredPrefix = prefix;\n    }\n    return ns;\n};\n\nLtxml.XNamespace.getName = function (name) {\n    return new Ltxml.XName(this.namespaceName, name);\n};\n\nLtxml.XNamespace.toString = function () {\n    if (this === Ltxml.XNamespace.getNone()) {\n        return \"\";\n    }\n    return \"{\" + this.namespaceName + \"}\";\n};\n\nLtxml.XNamespace.getNone = function () {\n    var namespaceCache, namespace, nso;\n\n    namespaceCache = Ltxml.namespaceCache;\n    namespace = '__none';\n    if (namespaceCache[namespace] === undefined) {\n        nso = {\n            namespaceName: namespace,\n            preferredPrefix: '',\n            getName: Ltxml.XNamespace.getName,\n            toString: Ltxml.XNamespace.toString\n        };\n        namespaceCache[namespace] = nso;\n        return nso;\n    }\n    return namespaceCache[namespace];\n};\n\nLtxml.XNamespace.get = function (uri) {\n    return new Ltxml.XNamespace(uri);\n};\n\nLtxml.XNamespace.getXml = function () {\n    return new Ltxml.XNamespace(\"http://www.w3.org/XML/1998/namespace\", \"xml\");\n};\n\nLtxml.XNamespace.getXmlns = function () {\n    return new Ltxml.XNamespace(\"http://www.w3.org/2000/xmlns/\", \"xmlns\");\n};\n\nif (Object.defineProperties) {\n\n    Object.defineProperty(Ltxml.XNamespace, \"none\", {\n        get: function () {\n            return Ltxml.XNamespace.getNone();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XNamespace, \"xml\", {\n        get: function () {\n            return Ltxml.XNamespace.getXml();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XNamespace, \"xmlns\", {\n        get: function () {\n            return Ltxml.XNamespace.getXmlns();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n}\n\n/********************** XName **********************/\n\n// for namespace, takes either a string or an atomized XNamespace object.\n// for name, takes a string\nLtxml.XName = function (arg1, arg2) {\n    var nameCache, expandedNamespaceObject, expandedNamespaceQName,\n        namespaceOfExpandedName, noNamespaceObject, noNamespaceQName,\n        noNamespaceNameObject, namespaceObject, namespaceQName,\n        namespaceNameObject, indexOfClosingBrace;\n\n    nameCache = Ltxml.nameCache;\n\n    if (typeof arg1 === 'string' && arg2 === undefined && arg1.charAt(0) === '{') {\n        indexOfClosingBrace = arg1.indexOf('}');\n        namespaceOfExpandedName = arg1.substring(1, indexOfClosingBrace);\n        expandedNamespaceObject = new Ltxml.XNamespace(namespaceOfExpandedName);\n        arg2 = arg1.substring(indexOfClosingBrace + 1);\n        expandedNamespaceQName = \"{\" + namespaceOfExpandedName + \"}\" + arg2;\n        if (nameCache[expandedNamespaceQName] === undefined) {\n            nameCache[expandedNamespaceQName] = {\n                namespace: expandedNamespaceObject,\n                namespaceName: namespaceOfExpandedName,\n                localName: arg2,\n                toString: Ltxml.XName.toString\n            };\n            return nameCache[expandedNamespaceQName];\n        }\n        return nameCache[expandedNamespaceQName];\n    }\n\n    if (typeof arg1 === 'string' && arg2 === undefined) {\n        noNamespaceObject = Ltxml.XNamespace.getNone();\n        noNamespaceQName = \"{\" + noNamespaceObject.namespaceName + \"}\" + arg1;\n        if (nameCache[noNamespaceQName] === undefined) {\n            noNamespaceNameObject = {\n                namespace: noNamespaceObject,\n                namespaceName: '',\n                localName: arg1,\n                toString: Ltxml.XName.toString\n            };\n            nameCache[noNamespaceQName] = noNamespaceNameObject;\n            return noNamespaceNameObject;\n        }\n        return nameCache[noNamespaceQName];\n    }\n\n    namespaceObject = arg1;\n    if (typeof arg1 !== 'object') {\n        namespaceObject = Ltxml.XNamespace(arg1);\n    }\n    namespaceQName = \"{\" + namespaceObject.namespaceName + \"}\" + arg2;\n    if (nameCache[namespaceQName] === undefined) {\n        namespaceNameObject = {\n            namespace: namespaceObject,\n            namespaceName: namespaceObject.namespaceName,\n            localName: arg2,\n            toString: Ltxml.XName.toString\n        };\n        nameCache[namespaceQName] = namespaceNameObject;\n        return namespaceNameObject;\n    }\n    return nameCache[namespaceQName];\n};\n\nLtxml.XName.toString = function () {\n    return this.namespace + this.localName;\n};\n\nLtxml.XName.qualify = function (xname, element, isAttribute) {\n    if (xname.namespace === Ltxml.XNamespace.getNone()) {\n        return xname.localName;\n    }\n    var prefix = element.getPrefixOfNamespace(xname.namespace, isAttribute);\n    if (prefix === '') {\n        return xname.localName;\n    }\n    return prefix + \":\" + xname.localName;\n};\n\nLtxml.XName.get = function (arg1, arg2) {\n    var xn;\n\n    if (typeof arg1 === 'string' && arg2 === undefined) {\n        xn = new Ltxml.XName(arg1);\n        return xn;\n    }\n    if ((typeof arg1 === 'string' || arg1.namespaceName) &&\n            typeof arg2 === 'string') {\n        xn = new Ltxml.XName(arg1, arg2);\n        return xn;\n    }\n    throw 'XName.get: invalid arguments';\n};\n\n/********************** XObject **********************/\n\nLtxml.XObject = function () { };\n\nLtxml.XObject.prototype.addAnnotation = function (type, object) {\n    if (!object) {\n        object = {};\n    }\n    this.annotationsArray.push({\n        Type: type,\n        Object: object\n    });\n};\n\nLtxml.XObject.prototype.annotation = function (type) {\n    var i;\n\n    for (i = 0; i < this.annotationsArray.length; i += 1) {\n        if (this.annotationsArray[i].Type === type) {\n            return this.annotationsArray[i].Object;\n        }\n    }\n    return null;\n};\n\nLtxml.XObject.prototype.annotations = function (type) {\n    var retVal, i;\n\n    retVal = [];\n    for (i = 0; i < this.annotationsArray.length; i += 1) {\n        if (type === undefined || this.annotationsArray[i].Type === type) {\n            retVal.push(this.annotationsArray[i].Object);\n        }\n    }\n    return Enumerable.from(retVal);\n};\n\nLtxml.XObject.prototype.removeAnnotations = function (type) {\n    var j;\n\n    if (type === undefined) {\n        this.annotationsArray = [];\n    } else {\n        while (true) {\n            for (j = 0; j < this.annotationsArray.length; j += 1) {\n                if (this.annotationsArray[j].Type === type) {\n                    break;\n                }\n            }\n            if (j === this.annotationsArray.length) {\n                break;\n            }\n            this.annotationsArray.splice(j, 1);\n        }\n    }\n};\n\nLtxml.XObject.prototype.getDocument = function () {\n    var current = this;\n\n    while (true) {\n        if (current.nodeType === 'Document') {\n            return current;\n        }\n        current = current.parent;\n        if (current === null) {\n            return null;\n        }\n    }\n};\n\nif (Object.defineProperties) {\n\n    Object.defineProperty(Ltxml.XObject.prototype, \"document\", {\n        get: function () {\n            return this.getDocument();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n}\n\n/********************** XNode: XObject **********************/\n\nLtxml.XNode = function () { };\n\nLtxml.XNode.prototype = new Ltxml.XObject();\n\nLtxml.XNode.prototype.addAfterSelf = function () {\n    var indexOfSelf, args, contentToInsert, newContent, i, z;\n\n    args = [];\n    newContent = [];\n\n    if (this.parent === null) {\n        throw \"addAfterSelf: no parent element\";\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    args = [];\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    contentToInsert = [];\n    addContent(this,\n        function (c) { contentToInsert.push(c); },\n        function () { throw \"addAfterSelf: invalid content\"; },\n        args);\n    newContent = this.parent.nodesArray.slice(0, indexOfSelf + 1)\n        .concat(contentToInsert)\n        .concat(this.parent.nodesArray.slice(indexOfSelf + 1));\n    for (z = 0; z < newContent.length; z += 1) {\n        newContent[z].parent = this.parent;\n    }\n    this.parent.nodesArray = newContent;\n};\n\nLtxml.XNode.prototype.addBeforeSelf = function () {\n    var indexOfSelf, args, contentToInsert, newContent, i, z;\n\n    args = [];\n    contentToInsert = [];\n    newContent = [];\n\n    if (this.parent === null) {\n        throw \"addBeforeSelf: no parent element\";\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    args = [];\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    contentToInsert = [];\n    addContent(this,\n        function (c) { contentToInsert.push(c); },\n        function () { throw \"addBeforeSelf: invalid content\"; },\n        args);\n    newContent = this.parent.nodesArray.slice(0, indexOfSelf)\n        .concat(contentToInsert)\n        .concat(this.parent.nodesArray.slice(indexOfSelf));\n    for (z = 0; z < newContent.length; z += 1) {\n        newContent[z].parent = this.parent;\n    }\n    this.parent.nodesArray = newContent;\n};\n\nLtxml.XNode.prototype.CompareDocumentOrder = function () {\n    throw \"Not implemented\";\n};\n\nLtxml.XNode.prototype.deepEquals = function (other) {\n    var atts1, atts2, nodes1, nodes2;\n\n    if (this.nodeType !== other.nodeType) {\n        return false;\n    }\n    if (this.nodeType === 'Element' && this.name !== other.name) {\n        return false;\n    }\n    if (this.nodeType === 'Comment' ||\n            this.nodeType === 'Text' ||\n            this.nodeType === 'CData' ||\n            this.nodeType === 'ProcessingInstruction' ||\n            this.nodeType === 'Entity') {\n        return this.value === other.value;\n    }\n    if (this.attributesArray.length !== other.attributesArray.length) {\n        return false;\n    }\n\n    if (this.attributesArray.length !== 0) {\n        atts1 = Enumerable\n            .from(this.attributesArray)\n            .where(function (a) {\n                return !a.isNamespaceDeclaration;\n            })\n            .orderBy(\"k=>k.name\");\n        atts2 = Enumerable\n            .from(other.attributesArray)\n            .where(function (a) {\n                return !a.isNamespaceDeclaration;\n            })\n            .orderBy(\"k=>k.name\");\n        // in following lambda, return true if any do NOT match\n        if (atts1.zip(atts2, function (a, b) {\n            return {\n                att1: a,\n                att2: b\n            };\n        })\n            .any(function (p) {\n                if (p.att1.name !== p.att2.name) {\n                    return true;\n                }\n                if (p.att1.value !== p.att2.value) {\n                    return true;\n                }\n                return false;\n            })) {\n            return false;\n        }\n    }\n    if (this.nodesArray.length !== other.nodesArray.length) {\n        return false;\n    }\n    if (this.nodesArray.length === 0 && other.nodesArray.length === 0) {\n        return true;\n    }\n    nodes1 = Enumerable.from(this.nodesArray);\n    nodes2 = Enumerable.from(other.nodesArray);\n    if (nodes1\n        .zip(nodes2, function (a, b) {\n            return {\n                node1: a,\n                node2: b\n            };\n        })\n        .any(function (z) { return !z.node1.deepEquals(z.node2); })) {\n        return false;\n    }\n    return true;\n};\n\nLtxml.XNode.prototype.isAfter = function () {\n    throw \"Not implemented\";\n};\n\nLtxml.XNode.prototype.isBefore = function () {\n    throw \"Not implemented\";\n};\n\nLtxml.XNode.prototype.getNextNode = function () {\n    var indexOfSelf;\n\n    if (this.parent === null) {\n        throw \"getNextNode: no parent element\";\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    if (indexOfSelf < this.parent.nodesArray.length - 2) {\n        return this.parent.nodesArray[indexOfSelf + 1];\n    }\n    return null;\n};\n\nLtxml.XNode.prototype.remove = function () {\n    var indexOfSelf, newContent;\n\n    if (this.parent === null) {\n        throw \"remove: no parent element\";\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    newContent = this.parent\n        .nodesArray\n        .slice(0, indexOfSelf)\n        .concat(this.parent.nodesArray.slice(indexOfSelf + 1));\n    this.parent.nodesArray = newContent;\n};\n\nLtxml.XNode.prototype.replaceWith = function () {\n    var indexOfSelf, newContent, args, contentToInsert, i, z;\n\n    args = [];\n    contentToInsert = [];\n    if (this.parent === null) {\n        throw \"replaceWith: no parent element\";\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    args = [];\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    contentToInsert = [];\n    addContent(this,\n        function (c) { contentToInsert.push(c); },\n        function () { throw \"replaceWith: invalid content\"; },\n        args);\n    newContent = this.parent\n        .nodesArray\n        .slice(0, indexOfSelf)\n        .concat(contentToInsert)\n        .concat(this.parent.nodesArray.slice(indexOfSelf + 1));\n    for (z = 0; z < newContent.length; z += 1) {\n        newContent[z].parent = this.parent;\n    }\n    this.parent.nodesArray = newContent;\n};\n\nLtxml.XNode.prototype.getPreviousNode = function () {\n    var indexOfSelf;\n\n    if (this.parent === null) {\n        throw \"previousNode: no parent element\";\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    if (indexOfSelf > 0) {\n        return this.parent.nodesArray[indexOfSelf - 1];\n    }\n    return null;\n};\n\n// xname optional\nLtxml.XNode.prototype.ancestors = function (xname) {\n    var self, result, current;\n\n    self = this;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var current;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    current = self.parent;\n                },  // initialize\n                function () { // tryGetNext\n                    while (current !== null) {\n                        if (xname && current.name !== xname) {\n                            current = current.parent;\n                        } else {\n                            var thisOne = current;\n                            current = current.parent;\n                            return this.yieldReturn(thisOne);\n                        }\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n    result = [];\n    current = this.parent;\n    if (xname === undefined) {\n        while (current !== null) {\n            result.push(current);\n            current = current.parent;\n        }\n        return Enumerable.from(result);\n    }\n    while (current !== null) {\n        if (current.name === xname) {\n            result.push(current);\n        }\n        current = current.parent;\n    }\n    return Enumerable.from(result);\n};\n\nLtxml.XNode.prototype.nodesAfterSelf = function () {\n    var indexOfSelf, returnValue, self;\n\n    self = this;\n    if (this.parent === null) {\n        throw \"nodesAfterSelf: no parent element\";\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var i, length, parent;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    parent = self.parent;\n                    i = parent.nodesArray.indexOf(self) + 1;\n                    length = parent.nodesArray.length;\n                },  // initialize\n                function () { // tryGetNext\n                    var n;\n\n                    while (i < length) {\n                        n = parent.nodesArray[i];\n                        i += 1;\n                        return this.yieldReturn(n);  //ignore jslint\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    returnValue = Enumerable\n        .from(this.parent.nodesArray.slice(indexOfSelf + 1));\n    return returnValue;\n};\n\nLtxml.XNode.prototype.nodesBeforeSelf = function () {\n    var indexOfSelf, returnValue, self;\n\n    self = this;\n    if (this.parent === null) {\n        throw \"nodesBeforeSelf: no parent element\";\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var parent, i, selfIndex;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    parent = self.parent;\n                    i = 0;\n                    selfIndex = parent.nodesArray.indexOf(self);\n                },  // initialize\n                function () { // tryGetNext\n                    var n;\n\n                    while (i < selfIndex) {\n                        n = parent.nodesArray[i];\n                        i += 1;\n                        return this.yieldReturn(n);  //ignore jslint\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n    if (this.parent === null) {\n        throw \"nodesBeforeSelf: no parent element\";\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    returnValue = Enumerable\n        .from(this.parent.nodesArray.slice(0, indexOfSelf));\n    return returnValue;\n};\n\n// xname optional\nLtxml.XNode.prototype.elementsAfterSelf = function (xname) {\n    var indexOfSelf, returnValue, self;\n\n    self = this;\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    if (this.parent === null) {\n        throw \"elementsAfterSelf: no parent element\";\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var i, length, parent;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    parent = self.parent;\n                    i = parent.nodesArray.indexOf(self) + 1;\n                    length = parent.nodesArray.length;\n                },  // initialize\n                function () { // tryGetNext\n                    while (i < length) {\n                        var n = parent.nodesArray[i];\n                        if (n.nodeType !== 'Element' || (xname && n.name !== xname)) {\n                            i += 1;\n                        }\n                        else {\n                            i += 1;\n                            return this.yieldReturn(n);\n                        }\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    returnValue = Enumerable\n        .from(this.parent.nodesArray.slice(indexOfSelf + 1))\n        .where(function (e) { return e.nodeType === 'Element'; });\n    if (xname) {\n        returnValue = returnValue.where(function (e) { return e.name === xname; });\n    }\n    return returnValue;\n};\n\n// xname is optional\nLtxml.XNode.prototype.elementsBeforeSelf = function (xname) {\n    var indexOfSelf, returnValue, self;\n\n    self = this;\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    if (this.parent === null) {\n        throw \"elementsBeforeSelf: no parent element\";\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var parent, i, selfIndex;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    parent = self.parent;\n                    i = 0;\n                    selfIndex = parent.nodesArray.indexOf(self);\n                },  // initialize\n                function () { // tryGetNext\n                    var n;\n\n                    while (i < selfIndex) {\n                        n = parent.nodesArray[i];\n                        if (n.nodeType !== 'Element' || (xname && n.name !== xname)) {\n                            i += 1;\n                        }\n                        else {\n                            i += 1;\n                            return this.yieldReturn(n);\n                        }\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    returnValue = Enumerable\n        .from(this.parent.nodesArray.slice(0, indexOfSelf))\n        .where(function (e) { return e.nodeType === 'Element'; });\n    if (xname) {\n        returnValue = returnValue.where(function (e) { return e.name === xname; });\n    }\n    return returnValue;\n};\n\n// xname is optional\nLtxml.XNode.prototype.elementsBeforeSelfReverseDocumentOrder = function (xname) {\n    var indexOfSelf, returnValue, self;\n\n    self = this;\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    if (this.parent === null) {\n        throw \"elementsBeforeSelfReverseDocumentOrder: no parent element\";\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var parent, i;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    parent = self.parent;\n                    i = parent.nodesArray.indexOf(self) - 1;\n                },  // initialize\n                function () { // tryGetNext\n                    while (i >= 0) {\n                        var n = parent.nodesArray[i];\n                        if (n.nodeType !== 'Element' || (xname && n.name !== xname)) {\n                            i -= 1;\n                        }\n                        else {\n                            i -= 1;\n                            return this.yieldReturn(n);\n                        }\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n    indexOfSelf = this.parent.nodesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    returnValue = Enumerable\n        .from(this.parent.nodesArray.slice(0, indexOfSelf))\n        .where(function (e) { return e.nodeType === 'Element'; })\n        .reverse();\n    if (xname) {\n        returnValue = returnValue.where(function (e) { return e.name === xname; });\n    }\n    return returnValue;\n};\n\nif (Object.defineProperties) {\n\n    Object.defineProperty(Ltxml.XNode.prototype, \"previousNode\", {\n        get: function () {\n            return this.getPreviousNode();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XNode.prototype, \"nextNode\", {\n        get: function () {\n            return this.getNextNode();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n}\n\n/********************** XAttribute: XObject **********************/\n\nLtxml.XAttribute = function (arg1, arg2) {\n    var xnameObj, attContent, i, xmlns;\n\n    this.nodeType = 'Attribute';\n    this.simpleValue = null;\n    this.attributeNodesArray = null;\n    this.isNamespaceDeclaration = false;\n    this.name = null;\n\n    if (Object.defineProperties) {\n\n        Object.defineProperty(this, \"value\", {\n            get: Ltxml.XAttribute.prototype.getValue,\n            set: Ltxml.XAttribute.prototype.setValue,\n            enumerable: true,\n            configurable: true\n        });\n\n    }\n\n    if (arg1.nodeType && arg1.nodeType === 'Attribute') {\n        if (arg2 !== undefined) {\n            throw \"XAttribute constructor: invalid arguments\";\n        }\n        this.isNamespaceDeclaration = arg1.isNamespaceDeclaration;\n        if (arg1.simpleValue !== null && arg1.simpleValue !== undefined) {\n            this.simpleValue = arg1.simpleValue;\n        }\n        else {\n            attContent = [];\n            for (i = 0; i < arg1.attributeNodesArray.length; i += 1) {\n                attContent.push(arg1.attributeNodesArray[i]);\n            }\n            this.attributeNodesArray = attContent;\n        }\n        this.name = arg1.name;\n        return;\n    }\n\n    if (arg2 === undefined) {\n        throw \"XAttribute constructor: invalid arguments\";\n    }\n\n    // external properties\n    if (arg2.namespaceName) {\n        this.attributeNodesArray = [arg2.namespaceName];\n    }\n    else {\n        attContent = [];\n        addContentThatCanContainEntities(arg2.toString(), this, false, function (c) {\n            attContent.push(c);\n        });\n        if (attContent.length === 1) {\n            this.simpleValue = attContent[0];\n        }\n        else {\n            this.attributeNodesArray = attContent;\n        }\n    }\n\n    // constructor\n    xnameObj = arg1;\n    xmlns = Ltxml.XNamespace.getXmlns();\n    if (typeof arg1 === 'string') {\n        if (arg1 === \"xmlns\") {\n            xnameObj = new Ltxml.XName(xmlns + \"xmlns\");\n        }\n        else {\n            xnameObj = new Ltxml.XName(arg1);\n        }\n    }\n    this.isNamespaceDeclaration = xnameObj.namespace === xmlns;\n    this.name = xnameObj;\n};\n\nLtxml.XAttribute.prototype = new Ltxml.XObject();\n\nserializeAttributeContent = function (a, o) {\n    var na, i;\n\n    if (a.simpleValue !== null && a.simpleValue !== undefined) {\n        o.a(a.simpleValue);\n    }\n    else {\n        na = a.attributeNodesArray;\n        for (i = 0; i < na.length; i += 1) {\n            if (na[i].nodeType) {\n                na[i].serialize(o);\n            }\n            else {\n                o.a(na[i]);\n            }\n        }\n    }\n};\n\nLtxml.XAttribute.prototype.serialize = function (o) {\n    if (this.name.namespace === Ltxml.XNamespace.getXmlns()) {\n        if (this.name.localName === 'xmlns') {\n            o.a(\"xmlns='\");\n            serializeAttributeContent(this, o);\n            o.a(\"'\");\n            return;\n        }\n        o.a(\"xmlns:\").a(this.name.localName).a(\"='\");\n        serializeAttributeContent(this, o);\n        o.a(\"'\");\n        return;\n    }\n    if (this.name.namespace === Ltxml.XNamespace.getNone()) {\n        o.a(this.name.localName).a(\"='\");\n        serializeAttributeContent(this, o);\n        o.a(\"'\");\n        return;\n    }\n    if (this.name.namespace === Ltxml.XNamespace.getXml()) {\n        if (typeof this.value === \"string\") {\n            o.a(\"xml:\")\n                .a(this.name.localName)\n                .a(\"='\");\n            serializeAttributeContent(this, o);\n            o.a(\"'\");\n        }\n        else {\n            o.a(\"xml:\")\n                .a(this.name.localName)\n                .a(\"='\");\n            serializeAttributeContent(this, o);\n            o.a(\"'\");\n        }\n        return;\n    }\n    o.a(Ltxml.XName.qualify(this.name, this.parent, true)).a(\"='\");\n    serializeAttributeContent(this, o);\n    o.a(\"'\");\n    return;\n};\n\nLtxml.XAttribute.prototype.toString = function () {\n    var o = getStringBuilder();\n    this.serialize(o);\n    return o.toString();\n};\n\nLtxml.XAttribute.prototype.remove = function () {\n    var indexOfSelf, newAtts;\n\n    newAtts = [];\n    if (this.parent === null) {\n        throw \"XAttribute.remove: no parent element\";\n    }\n    indexOfSelf = this.parent.attributesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    newAtts = this.parent\n        .attributesArray\n        .slice(0, indexOfSelf)\n        .concat(this.parent.attributesArray.slice(indexOfSelf + 1));\n    this.parent.attributesArray = newAtts;\n};\n\nLtxml.XAttribute.prototype.setValue = function (value) {\n    var newContent = [];\n    addContentThatCanContainEntities(value.toString(), this, false, function (a) {\n        newContent.push(a);\n    });\n    if (newContent.length === 1) {\n        this.simpleValue = newContent[0];\n    }\n    else {\n        this.attributeNodesArray = newContent;\n    }\n};\n\nLtxml.XAttribute.prototype.getValue = function () {\n    var o, s;\n\n    o = getStringBuilder();\n    serializeAttributeContent(this, o);\n    s = o.toString();\n    return s;\n};\n\nLtxml.XAttribute.prototype.getNextAttribute = function () {\n    var indexOfSelf;\n\n    if (this.parent === null) {\n        throw \"getNextAttribute: no parent element\";\n    }\n    indexOfSelf = this.parent.attributesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    if (indexOfSelf < this.parent.attributesArray.length - 2) {\n        return this.parent.attributesArray[indexOfSelf + 1];\n    }\n    return null;\n};\n\nLtxml.XAttribute.prototype.getPreviousAttribute = function () {\n    var indexOfSelf;\n\n    if (!this.parent) {\n        throw \"getPreviousAttribute: no parent element\";\n    }\n    indexOfSelf = this.parent.attributesArray.indexOf(this);\n    if (indexOfSelf === -1) {\n        throw \"Internal Error\";\n    }\n    if (indexOfSelf > 0) {\n        return this.parent.attributesArray[indexOfSelf - 1];\n    }\n    return null;\n};\n\nif (Object.defineProperties) {\n\n    Object.defineProperty(Ltxml.XAttribute.prototype, \"previousAttribute\", {\n        get: function () {\n            return this.getPreviousAttribute();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XAttribute.prototype, \"nextAttribute\", {\n        get: function () {\n            return this.getNextAttribute();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n}\n\n/********************** XComment: XNode **********************/\n\nLtxml.XComment = function (arg1) {\n    this.nodeType = 'Comment';\n    this.parent = null;\n\n    if (arg1.nodeType && arg1.nodeType === 'Comment') {\n        // copy constructor\n        this.value = arg1.value.toString();\n    }\n    else {\n        this.value = arg1.toString();\n    }\n};\n\nLtxml.XComment.prototype = new Ltxml.XNode();\n\nLtxml.XComment.prototype.serialize = function (o, indent, depth) {\n    var indent_spaces;\n\n    if (!depth) {\n        depth = 0;\n    }\n    if (indent) {\n        indent_spaces = Ltxml.spaces.substring(0, depth);\n        o.a(indent_spaces).a(\"<!--\").a(this.value).a(\"-->\\n\");\n        return;\n    }\n    o.a('<!--').a(this.value).a('-->');\n    return;\n};\n\nLtxml.XComment.prototype.toString = function (indent) {\n    var o = getStringBuilder();\n    this.serialize(o, indent);\n    return o.toString();\n};\n\n/********************** XContainer: XNode **********************/\n\nLtxml.XContainer = function () { };\n\nLtxml.XContainer.prototype = new Ltxml.XNode();\n\nLtxml.XContainer.prototype.add = function () {\n    var nodesToInsert, attributesToInsert, args, i, newNodes, newAttributes;\n\n    nodesToInsert = [];\n    attributesToInsert = [];\n    args = [];\n\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    nodesToInsert = [];\n    addContent(this,\n        function (c) { nodesToInsert.push(c); },\n        function (a) { attributesToInsert.push(a); },\n        args);\n    newNodes = this.nodesArray.concat(nodesToInsert);\n    newAttributes = this.attributesArray.concat(attributesToInsert);\n    this.nodesArray = newNodes;\n    this.attributesArray = newAttributes;\n};\n\nLtxml.XContainer.prototype.addFirst = function () {\n    var nodesToInsert, attributesToInsert, args, i, newNodes, newAttributes;\n\n    nodesToInsert = [];\n    attributesToInsert = [];\n    args = [];\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    nodesToInsert = [];\n    addContent(this,\n        function (c) { nodesToInsert.push(c); },\n        function (a) { attributesToInsert.push(a); },\n        args);\n    newNodes = nodesToInsert.concat(this.nodesArray);\n    newAttributes = this.attributesArray.concat(attributesToInsert);\n    this.nodesArray = newNodes;\n    this.attributesArray = newAttributes;\n};\n\nLtxml.XContainer.prototype.element = function (name) {\n    var i, length;\n\n    if (typeof name === 'string') {\n        name = new Ltxml.XName(name);\n    }\n    length = this.nodesArray.length;\n    for (i = 0; i < length; i += 1) {\n        if (this.nodesArray[i].name === name) {\n            return this.nodesArray[i];\n        }\n    }\n    return null;\n};\n\nLtxml.XContainer.prototype.nodes = function () {\n    return Enumerable.from(this.nodesArray);\n};\n\nLtxml.XContainer.prototype.removeNodes = function () {\n    this.nodesArray = [];\n};\n\nLtxml.XContainer.prototype.replaceNodes = function () {\n    var nodesToInsert, attributesToInsert, args, i, newAttributes;\n\n    nodesToInsert = [];\n    attributesToInsert = [];\n    args = [];\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    addContent(this,\n        function (c) { nodesToInsert.push(c); },\n        function (a) { attributesToInsert.push(a); },\n        args);\n    newAttributes = this.attributesArray.concat(attributesToInsert);\n    this.nodesArray = nodesToInsert;\n    this.attributesArray = newAttributes;\n};\n\nLtxml.XContainer.prototype.getFirstNode = function () {\n    if (this.nodesArray.length >= 1) {\n        return this.nodesArray[0];\n    }\n    return null;\n};\n\nLtxml.XContainer.prototype.getLastNode = function () {\n    if (this.nodesArray.length >= 1) {\n        return this.nodesArray[this.nodesArray.length - 1];\n    }\n    return null;\n};\n\nfunction descendantNodesHelper(element, pushFunc) {\n    var i;\n\n    for (i = 0; i < element.nodesArray.length; i += 1) {\n        pushFunc(element.nodesArray[i]);\n        if (element.nodesArray[i].nodeType === 'Element') {\n            descendantNodesHelper(element.nodesArray[i], pushFunc);\n        }\n    }\n}\n\nLtxml.XContainer.prototype.descendantNodes = function () {\n    var result, returnValue;\n\n    if (this.lazy) {\n        returnValue = Enumerable\n            .from(this.nodesArray)\n            .traverseDepthFirst(function (node) {\n                return Enumerable.from(node.nodesArray);\n            });\n        return returnValue;\n    }\n    result = [];\n    descendantNodesHelper(this, function (e) { result.push(e); });\n    return Enumerable.from(result);\n};\n\nfunction lazyDescendantHelper(container, xname) {\n    var returnValue = Enumerable\n        .from(container.nodesArray)\n        .traverseDepthFirst(function (node) {\n            return Enumerable.from(node.nodesArray).where(function (node) {\n                return node.nodeType === 'Element';\n            });\n        })\n        .where(function (node) { return node.nodeType === 'Element'; });\n    if (xname) {\n        returnValue = returnValue.where(function (e) { return e.name === xname; });\n    }\n    return returnValue;\n}\n\nfunction eagarDescendantHelper(container, xname, pushFunc) {\n    var i;\n\n    for (i = 0; i < container.nodesArray.length; i += 1) {\n        if (container.nodesArray[i].nodeType === 'Element') {\n            if (xname === undefined) {\n                pushFunc(container.nodesArray[i]);\n                eagarDescendantHelper(container.nodesArray[i], xname, pushFunc);\n            }\n            else {\n                if (container.nodesArray[i].name === xname) {\n                    pushFunc(container.nodesArray[i]);\n                }\n                eagarDescendantHelper(container.nodesArray[i], xname, pushFunc);\n            }\n        }\n    }\n}\n\n// xname optional\nLtxml.XContainer.prototype.descendants = function (xname) {\n    var result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    if (this.lazy) {\n        return lazyDescendantHelper(this, xname);\n    }\n    result = [];\n    eagarDescendantHelper(this, xname, function (e) { result.push(e); });\n    return Enumerable.from(result);\n};\n\n// xname optional\nLtxml.XContainer.prototype.elements = function (xname) {\n    var returnValue, self;\n\n    self = this;\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var i, length;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    i = 0;\n                    length = self.nodesArray.length;\n                },  // initialize\n                function () { // tryGetNext\n                    while (i < length) {\n                        var n = self.nodesArray[i];\n                        if (n.nodeType !== 'Element' || (xname && n.name !== xname)) {\n                            i += 1;\n                        }\n                        else {\n                            i += 1;\n                            return this.yieldReturn(n);\n                        }\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n    returnValue = Enumerable\n        .from(this.nodesArray)\n        .where(function (e) { return e.nodeType === 'Element'; });\n    if (xname) {\n        returnValue = returnValue.where(function (e) {\n            return e.name === xname;\n        });\n    }\n    return returnValue;\n};\n\nif (Object.defineProperties) {\n\n    Object.defineProperty(Ltxml.XContainer.prototype, \"firstNode\", {\n        get: function () {\n            return this.getFirstNode();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XContainer.prototype, \"lastNode\", {\n        get: function () {\n            return this.getLastNode();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n}\n\n/*********************** XDeclaration ***********************/\n\n//new XDeclaration(version, encoding, standalone)\n//new XDeclaration(xdeclaration)\nLtxml.XDeclaration = function (arg1, arg2, arg3) {\n    if (arg1 && typeof arg1 === 'object' && arguments.length === 1) {\n        this.type = 'XDeclaration';\n        this.encoding = arg1.encoding ? arg1.encoding : ''; //ignore jslint\n        this.standalone = arg1.standalone ? arg1.standalone : ''; //ignore jslint\n        this.version = arg1.version ? arg1.version : ''; //ignore jslint\n        return;\n    }\n    if (arguments.length === 3) {\n        this.type = 'XDeclaration';\n        this.version = arg1;\n        this.encoding = arg2;\n        this.standalone = arg3;\n        return;\n    }\n    this.type = 'XDeclaration';\n    this.version = '';\n    this.encoding = '';\n    this.standalone = '';\n};\n\nLtxml.XDeclaration.prototype.serialize = function (o, indent) {\n    if (this.version || this.encoding || this.standalone) {\n        if (indent) {\n            o.a(\"<?xml\");\n            if (this.version) {\n                o.a(\" version=\\\"\").a(this.version).a(\"\\\"\");\n            }\n            if (this.encoding) {\n                o.a(\" encoding=\\\"\").a(this.encoding).a(\"\\\"\");\n            }\n            if (this.standalone) {\n                o.a(\" standalone=\\\"\").a(this.standalone).a(\"\\\"\");\n            }\n            o.a(\"?>\\n\");\n            return;\n        }\n        o.a(\"<?xml\");\n        if (this.version) {\n            o.a(\" version=\\\"\").a(this.version).a(\"\\\"\");\n        }\n        if (this.encoding) {\n            o.a(\" encoding=\\\"\").a(this.encoding).a(\"\\\"\");\n        }\n        if (this.standalone) {\n            o.a(\" standalone=\\\"\").a(this.standalone).a(\"\\\"\");\n        }\n        o.a(\"?>\");\n        return;\n    }\n    return;\n};\n\nLtxml.XDeclaration.prototype.toString = function (indent) {\n    var o = getStringBuilder();\n    this.serialize(o, indent);\n    return o.toString();\n};\n\n/********************** XDocument: XContainer **********************/\n\n//new XDocument()\n//new XDocument(content)\n//new XDocument(xdocument)\n//new XDocument(xdeclaration, content)\nLtxml.XDocument = function (arg1) {\n    var tempNodes, tempNodes2, start, args, i;\n\n    this.annotationsArray = [];\n    this.parent = null;\n    this.nodeType = 'Document';\n    this.nodesArray = [];\n    this.declaration = new Ltxml.XDeclaration();\n\n    if (typeof arg1 === 'object' && arg1.nodeType && arg1.nodeType === 'Document') {\n        if (arguments.length > 1) {\n            throw \"XDocument constructor: invalid arguments\";\n        }\n        tempNodes = [];\n        if (arg1.declaration !== null) {\n            this.declaration = new Ltxml.XDeclaration(arg1.declaration);\n        }\n        addContent(this,\n                    function (z) { tempNodes.push(z); },\n                    function () { throw \"Internal Error\"; },\n                    arg1.nodesArray);\n        this.nodesArray = tempNodes;\n        return;\n    }\n\n    if (arguments.length > 0) {\n        if (typeof arg1 === 'object' && arg1.type && arg1.type === 'XDeclaration') {\n            start = 1;\n            this.declaration = arg1;\n        }\n        else {\n            start = 0;\n        }\n        args = [];\n        for (i = start; i < arguments.length; i += 1) {\n            args.push(arguments[i]);\n        }\n        tempNodes2 = [];\n        addContent(this,\n                        function (z) { tempNodes2.push(z); },\n                        function () { throw \"Internal Error\"; },\n                        args);\n        this.nodesArray = tempNodes2;\n    }\n};\n\nLtxml.XDocument.prototype = new Ltxml.XContainer();\n\nLtxml.XDocument.prototype.serialize = function (o, indent) {\n    var i;\n\n    if (indent) {\n        this.declaration.serialize(o, true);\n        for (i = 0; i < this.nodesArray.length; i += 1) {\n            this.nodesArray[i].serialize(o, true);\n        }\n        return;\n    }\n    this.declaration.serialize(o, false);\n    for (i = 0; i < this.nodesArray.length; i += 1) {\n        this.nodesArray[i].serialize(o, false);\n    }\n    return;\n};\n\nLtxml.XDocument.prototype.toString = function (indent) {\n    var clone, o, newRoot;\n\n    o = getStringBuilder();\n    clone = new Ltxml.XDocument(this.declaration,\n        this.nodes().select(function (n) {\n            if (n.nodeType === 'Element') {\n                newRoot = new Ltxml.XElement(n);\n                annotateRootForNamespaces(newRoot);\n                return newRoot;\n            }\n            return n;\n        }));\n\n    clone.serialize(o, indent);\n    return o.toString();\n};\n\nLtxml.XDocument.parse = function (xml) {\n    var xmlDoc, e;\n\n    xmlDoc = parseXml(xml);\n    e = Ltxml.XDocument.load(xmlDoc);\n    return e;\n};\n\nLtxml.XDocument.prototype.DocumentType = function () {\n    throw \"Not implemented\";\n};\n\nfunction xmlNodeLoad(node, depth) {\n    var ns, xn, aa, aa2, cn, cn2, el, at, doc,\n        xcd, xcm, pi, xdec, cnt1, cnt2, cnt3, tn, newAtt,\n        cn_doc, cnt4, nc, version, encoding, standalone;\n\n    if (node.nodeType) {\n        if (node.nodeType === 1) {\n            if (node.namespaceURI === null ||\n                node.namespaceURI === undefined ||\n                (node.namespaceURI === \"\" && node.nodeName !== \"xmlns\")) {\n                ns = Ltxml.XNamespace.getNone();\n            }\n            else {\n                ns = new Ltxml.XNamespace(\n                    node.namespaceURI,\n                    node.prefix && node.prefix !== \"\" ?\n                        node.prefix.toString() :\n                        null);\n            }\n            if (node.localName) {\n                xn = new Ltxml.XName(ns, node.localName);\n            }\n            else {\n                xn = new Ltxml.XName(ns, node.baseName);\n            }\n\n            aa = node.attributes;\n            cn = node.childNodes;\n\n            if (aa !== null && aa !== undefined && aa.length > 0) {\n                cn2 = [];\n                for (cnt1 = 0; cnt1 < cn.length; cnt1 += 1) {\n                    tn = xmlNodeLoad(cn[cnt1], depth + 1);\n                    cn2.push(tn);\n                }\n                aa2 = [];\n                for (cnt2 = 0; cnt2 < aa.length; cnt2 += 1) {\n                    newAtt = xmlNodeLoad(aa[cnt2], depth + 1);\n                    aa2.push(newAtt);\n                }\n                el = new Ltxml.XElement(xn, aa2, cn2);\n            }\n            else {\n                cn2 = [];\n                for (cnt3 = 0; cnt3 < cn.length; cnt3 += 1) {\n                    cn2.push(xmlNodeLoad(cn[cnt3], depth + 1));\n                }\n                el = new Ltxml.XElement(xn, cn2);\n            }\n            return el;\n        }\n\n        if (node.nodeType === 2) {\n            if (node.namespaceURI === null || node.namespaceURI === undefined ||\n                    (node.namespaceURI === \"\" && node.prefix !== \"xmlns\")) {\n                if (node.prefix === \"xml\") {\n                    ns = Ltxml.XNamespace.getXml();\n                }\n                else {\n                    ns = Ltxml.XNamespace.getNone();\n                }\n            }\n            else {\n                if (node.namespaceURI === \"http://www.w3.org/2000/xmlns/\" ||\n                        node.prefix === \"xmlns\") {\n                    ns = Ltxml.XNamespace.getXmlns();\n                }\n                else if (node.namespaceURI ===\n                        \"http://www.w3.org/XML/1998/namespace\") {\n                    ns = Ltxml.XNamespace.getXml();\n                }\n                else {\n                    ns = new Ltxml.XNamespace(\n                        node.namespaceURI,\n                            node.prefix ?\n                            node.prefix.toString() :\n                            null);\n                }\n            }\n            if (node.localName) {\n                xn = new Ltxml.XName(ns, node.localName);\n            }\n            else {\n                if (node.nodeName === \"xmlns\") {\n                    xn = new Ltxml.XName(ns, \"xmlns\");\n                }\n                else {\n                    xn = new Ltxml.XName(ns, node.baseName);\n                }\n            }\n            at = new Ltxml.XAttribute(xn, node.nodeValue);\n            return at;\n        }\n\n        if (node.nodeType === 3) {\n            nc = [];\n            addContentThatCanContainEntities(node.nodeValue, null, true, function (c) {\n                nc.push(c);\n            });\n            return nc;\n        }\n\n        if (node.nodeType === 4) {\n            xcd = new Ltxml.XCData(node.nodeValue);\n            return xcd;\n        }\n\n        if (node.nodeType === 7) {\n            if (node.target === 'xml') {\n                return null;\n            }\n            pi = new Ltxml.XProcessingInstruction(node.target, node.data);\n            return pi;\n        }\n\n        if (node.nodeType === 8) {\n            xcm = new Ltxml.XComment(node.nodeValue);\n            return xcm;\n        }\n\n        if (node.nodeType === 9) {\n            version = node.xmlVersion;\n            encoding = node.xmlEncoding;\n            standalone = node.xmlStandalone;\n            if (!version) { version = \"1.0\"; }\n            if (!encoding) { encoding = \"UTF-8\"; }\n            if (!standalone) { standalone = \"yes\"; }\n            xdec = new Ltxml.XDeclaration(\n                version,\n                encoding,\n                standalone ? \"yes\" : \"no\");\n            cn = node.childNodes;\n            cn_doc = [];\n            for (cnt4 = 0; cnt4 < cn.length; cnt4 += 1) {\n                cn_doc.push(xmlNodeLoad(cn[cnt4], depth + 1));\n            }\n            doc = new Ltxml.XDocument(xdec, cn_doc);\n            return doc;\n        }\n    }\n\n    throw (\"Internal Error\");\n}\n\nLtxml.XDocument.load = function (document) {\n    var d = xmlNodeLoad(document);\n    return d;\n};\n\nLtxml.XDocument.prototype.getRoot = function () {\n    return Enumerable\n        .from(this.nodesArray)\n        .firstOrDefault(function (f) {\n            return f.nodeType === 'Element';\n        });\n};\n\n// xname is optional\nLtxml.XDocument.prototype.descendants = function (xname) {\n    var result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n\n    if (this.lazy) {\n        return lazyDescendantHelper(this, xname);\n    }\n    // not lazy\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    result = [];\n    eagarDescendantHelper(this, xname, function (e) { result.push(e); });\n    return Enumerable.from(result);\n};\n\nif (Object.defineProperties) {\n\n    Object.defineProperty(Ltxml.XDocument.prototype, \"root\", {\n        get: function () {\n            return this.getRoot();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n}\n\n/********************** XElement: XContainer **********************/\n\n// new XElement(xelement)         // copy constructor\n// new XElement(xname)\n// new XElement(xname, content)\nLtxml.XElement = function (arg1) {\n    var tempNodes, tempAtts, tempNodes2, tempAtts2, xnameObj, args, i;\n\n    this.annotationsArray = [];\n    this.parent = null;\n    this.nodeType = 'Element';\n    this.nodesArray = null;\n    this.attributesArray = null;\n    this.name = null;\n    this.nsCache = null;\n\n    if (Object.defineProperties) {\n\n        Object.defineProperty(this, \"value\", {\n            get: Ltxml.XElement.prototype.getValue,\n            set: Ltxml.XElement.prototype.setValue,\n            enumerable: true,\n            configurable: true\n        });\n\n    }\n\n    if (typeof arg1 === 'object' && arg1.nodeType && arg1.nodeType === 'Element') {\n        if (arguments.length > 1) {\n            throw \"XElement constructor: invalid arguments\";\n        }\n        this.name = arg1.name;\n        tempNodes = [];\n        tempAtts = [];\n        addContent(this,\n                    function (z) { tempNodes.push(z); },\n                    function (z) { tempAtts.push(z); },\n                    arg1.attributesArray,\n                    arg1.nodesArray);\n        this.attributesArray = tempAtts;\n        this.nodesArray = tempNodes;\n        return;\n    }\n\n    xnameObj = arg1;\n    if (typeof arg1 === 'string') {\n        xnameObj = new Ltxml.XName(arg1);\n    }\n    this.name = xnameObj;\n    if (arguments.length > 1) {\n        args = [];\n        for (i = 1; i < arguments.length; i += 1) {\n            args.push(arguments[i]);\n        }\n        tempNodes2 = [];\n        tempAtts2 = [];\n        addContent(this,\n                    function (z) { tempNodes2.push(z); },\n                    function (z) { tempAtts2.push(z); },\n                    args);\n        this.attributesArray = tempAtts2;\n        this.nodesArray = tempNodes2;\n    }\n    if (this.nodesArray === null) {\n        this.nodesArray = [];\n    }\n    if (this.attributesArray === null) {\n        this.attributesArray = [];\n    }\n};\n\nLtxml.XElement.prototype = new Ltxml.XContainer();\n\nLtxml.XElement.prototype.attribute = function (xname) {\n    var i;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    for (i = 0; i < this.attributesArray.length; i += 1) {\n        if (this.attributesArray[i].name === xname) {\n            return this.attributesArray[i];\n        }\n    }\n    return null;\n};\n\nLtxml.XElement.prototype.attributes = function (xname) {\n    var atts;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n\n    if (xname === undefined) {\n        atts = Enumerable.from(this.attributesArray);\n        return atts;\n    }\n    // have XName\n    atts = Enumerable.from(this.attributesArray)\n        .where(function (a) { return a.name === xname; });\n    return atts;\n};\n\nLtxml.XElement.prototype.serialize = function (o, indent, depth) {\n    var attributesToUse, indent_spaces, middle_take, mixed_content,\n        attribute_indent_spaces, qn, as, bs, i, n;\n\n    if (!depth) {\n        depth = 0;\n    }\n    qn = Ltxml.XName.qualify(this.name, this, false);\n    attributesToUse = [].concat(this.attributesArray);\n    attributesToUse.sort(function (a, b) {\n        as = a.name.toString();\n        bs = b.name.toString();\n        if (as < bs) {\n            return -1;\n        }\n        if (as > bs) {\n            return 1;\n        }\n        return 0;\n    });\n    if (this.nodesArray.length === 0) {\n        // ================================ content:no\n        if (indent) {\n            // ================================ content:no indent:yes\n            indent_spaces = Ltxml.spaces.substring(0, depth);\n            if (attributesToUse.length === 0) {\n                // ============ content:no indent:yes attributes:no\n                o.a(indent_spaces).a(\"<\").a(qn).a(\"/>\\n\");\n                return;\n            }\n            if (attributesToUse.length === 1) {\n                // ================================ content:no indent:yes attributes:1\n                o.a(indent_spaces).a(\"<\").a(qn).a(\" \")\n                    .a(attributesToUse[0]).a(\"/>\\n\");\n                return;\n            }\n            // ================================ content:no indent:yes attributes:*\n            attribute_indent_spaces = indent_spaces +\n                Ltxml.spaces.substring(0, 2 + qn.length);\n            middle_take = attributesToUse.length - 2;\n            o.a(indent_spaces).a(\"<\").a(qn).a(\" \");\n            attributesToUse[0].serialize(o);\n            o.a(\"\\n\");\n            Enumerable.from(attributesToUse)\n                .skip(1)\n                .take(middle_take)\n                .forEach(function (a) {\n                    o.a(attribute_indent_spaces);\n                    a.serialize(o);\n                    o.a(\"\\n\");\n                });\n            o.a(attribute_indent_spaces);\n            attributesToUse[attributesToUse.length - 1].serialize(o);\n            o.a(\"/>\\n\");\n            return;\n        }\n        // ================================ content:no indent:no\n        o.a(\"<\").a(qn).a(attributesToUse.length === 0 ? \"\" : \" \");\n        for (i = 0; i < attributesToUse.length; i += 1) {\n            attributesToUse[i].serialize(o);\n            if (i < attributesToUse.length - 1) {\n                o.a(' ');\n            }\n        }\n        o.a(\"/>\");\n        return;\n    }\n    // ================================ content:yes\n    if (indent) {\n        // ================================ content:yes indent:yes\n        indent_spaces = Ltxml.spaces.substring(0, depth);\n        mixed_content = false;\n        for (i = 0; i < this.nodesArray.length; ++i) {\n            n = this.nodesArray[i];\n            if (n.nodeType === 'Text' ||\n                n.nodeType === 'Entity') {\n                mixed_content = true;\n                break;\n            }\n        }\n        //mixed_content = (this.nodesArray[0].nodeType === 'Text' ||\n        //    this.nodesArray[0].nodeType === 'CDATA' ||\n        //    this.nodesArray[0].nodeType === 'Entity');\n        if (mixed_content) {\n            // =============== content:yes indent:yes first_child_text:yes\n            if (attributesToUse.length === 0) {\n                // ========== content:yes indent:yes first_child_text:yes attributes:0\n                o.a(indent_spaces).a(\"<\").a(qn).a(\">\");\n                for (i = 0; i < this.nodesArray.length; i += 1) {\n                    this.nodesArray[i].serialize(o);\n                }\n                o.a(\"</\").a(qn).a(\">\\n\");\n                return;\n            }\n            if (attributesToUse.length === 1) {\n                // ========= content:yes indent:yes first_child_text:yes attributes:1\n                o.a(indent_spaces).a(\"<\").a(qn).a(\" \");\n                attributesToUse[0].serialize(o);\n                o.a(\">\");\n                for (i = 0; i < this.nodesArray.length; i += 1) {\n                    this.nodesArray[i].serialize(o, false);\n                }\n                o.a(\"</\").a(qn).a(\">\\n\");\n                return;\n            }\n            // ============ content:yes indent:yes first_child_text:yes attributes:*\n            attribute_indent_spaces = indent_spaces +\n                Ltxml.spaces.substring(0, 2 + qn.length);\n            middle_take = attributesToUse.length - 2;\n            o.a(indent_spaces).a(\"<\").a(qn).a(\" \");\n            attributesToUse[0].serialize(o);\n            o.a(\"\\n\");\n            Enumerable.from(attributesToUse)\n                .skip(1)\n                .take(middle_take)\n                .forEach(function (a) { o.a(attribute_indent_spaces).a(a).a(\"\\n\"); });\n            o.a(attribute_indent_spaces);\n            attributesToUse[attributesToUse.length - 1].serialize(o);\n            o.a(\">\");\n            Enumerable.from(this.nodesArray)\n                        .forEach(function (c) { c.serialize(o, false); });\n            o.a(\"</\").a(qn).a(\">\\n\");\n            // following is implementation that does not use LINQ\n            // var first = indent_spaces + \"<\" + qn + \" \" + attributesToUse[0] + \"\\n\";\n            // var atum = [];\n            // for (var i = 1; i < attributesToUse.length - 1; i += 1) {\n            //     atum.push(attributesToUse[i]);\n            // }\n            // var z9 = '';\n            // for (var j = 0; j < atum.length; j += 1) {\n            //     z9 += attribute_indent_spaces + atum[j].toString() + \"\\n\";\n            // }\n            // var second = z9;\n\n            // var third = attribute_indent_spaces +\n            //     attributesToUse[attributesToUse.length - 1] + \">\" +\n            //             Enumerable.from(this.nodesArray)\n            //                 .select(function (c) { return c.serialize(false) })\n            //        .aggregate('', function (a, b) { return a + b; }) +\n            //                   \"</\" + qn + \">\\n\";\n            // var es = first + second + third;\n            return;\n        }\n        // ================================ content:yes indent:yes first_child_text:no\n        if (attributesToUse.length === 0) {\n            // =============== content:yes indent:yes first_child_text:no attributes:0\n            o.a(indent_spaces).a(\"<\").a(qn).a(\">\\n\");\n            Enumerable.from(this.nodesArray)\n                .forEach(function (c) { c.serialize(o, true, depth + 2); });\n            o.a(indent_spaces).a(\"</\").a(qn).a(\">\\n\");\n            return;\n        }\n        if (attributesToUse.length === 1) {\n            // ============== content:yes indent:yes first_child_text:no attributes:1\n            o.a(indent_spaces).a(\"<\").a(qn).a(\" \");\n            attributesToUse[0].serialize(o);\n            o.a(\">\\n\");\n            Enumerable.from(this.nodesArray)\n                .forEach(function (c) { c.serialize(o, true, depth + 2); });\n            o.a(indent_spaces).a(\"</\").a(qn).a(\">\\n\");\n            return;\n        }\n        // ================ content:yes indent:yes first_child_text:no attributes:*\n        attribute_indent_spaces = indent_spaces +\n            Ltxml.spaces.substring(0, 2 + qn.length);\n        middle_take = attributesToUse.length - 2;\n        o.a(indent_spaces).a(\"<\").a(qn).a(\" \");\n        attributesToUse[0].serialize(o);\n        o.a(\"\\n\");\n        Enumerable.from(attributesToUse)\n                    .skip(1)\n                    .take(middle_take)\n                    .forEach(function (a) {\n                        o.a(attribute_indent_spaces); a.serialize(o); o.a(\"\\n\");\n                    });\n        o.a(attribute_indent_spaces);\n        attributesToUse[attributesToUse.length - 1].serialize(o);\n        o.a(\">\\n\");\n        Enumerable.from(this.nodesArray)\n            .forEach(function (c) { c.serialize(o, true, depth + 2); });\n        o.a(indent_spaces).a(\"</\").a(qn).a(\">\\n\");\n        return;\n    }\n    // ================================ content:yes indent:no\n    o.a(\"<\").a(qn);\n    Enumerable.from(attributesToUse)\n        .forEach(function (a) { o.a(\" \"); a.serialize(o); });\n    o.a(\">\");\n    Enumerable.from(this.nodesArray)\n        .forEach(function (n) { n.serialize(o); });\n    o.a(\"</\").a(qn).a(\">\");\n    return;\n};\n\nfunction annotateElementForNamespaces(element, nsCache, xmlns, xml, none) {\n    var needToProcess, aa, na, ns, len, i, j, nd, newNsCache, el, prefix, nn,\n        newPrefix, newAtt;\n\n    needToProcess = false;\n    aa = element.attributesArray;\n    len = aa.length;\n    for (i = 0; i < len; i += 1) {\n        nd = aa[i];\n        if (!nd.isNamespaceDeclaration) {\n            continue; //ignore jslint\n        }\n        ns = new Ltxml.XNamespace(nd.value);\n        prefix = nd.name.localName;\n        if (ns.preferredPrefix === null) {\n            ns.preferredPrefix = prefix;\n        }\n        if (nsCache.namespaceArray.indexOf(ns) === -1 || prefix !== ns.preferredPrefix) {\n            needToProcess = true;\n            break;\n        }\n    }\n    for (i = 0; i < len; i += 1) {\n        nd = aa[i];\n        if (!nd.isNamespaceDeclaration &&\n            nd.name.namespace !== none &&\n            nd.name.namespace !== xml) {\n            if (nsCache.namespaceArray.indexOf(nd.name.namespace) === -1) {\n                while (true) {\n                    newPrefix = \"p\" + prefixCounter;\n                    if (nsCache.prefixArray.indexOf(newPrefix) === -1) {\n                        break;\n                    }\n                    prefixCounter += 1;\n                }\n                newAtt = new Ltxml.XAttribute(Ltxml.XNamespace.getXmlns() + newPrefix,\n                    nd.name.namespace.namespaceName);\n                element.add(newAtt);\n                nsCache.namespaceArray.push(nd.name.namespace);\n                nsCache.prefixArray.push(newPrefix);\n                if (nsCache.prefixesFromNamespaceObjects) {\n                    nd.name.namespace.preferredPrefix = newPrefix;\n                }\n                needToProcess = true;\n            }\n        }\n    }\n    if (element.name.namespace === none &&\n        (nsCache.defaultNamespace !== null &&\n            nsCache.defaultNamespace !== none)) {\n        if (!Enumerable.from(element.attributesArray).any(function (a) {\n            return a.name.namespace === xmlns && a.name.localName === \"xmlns\";\n        })) {\n            nn = new Ltxml.XAttribute(\"xmlns\", \"\");\n            element.add(nn);\n            needToProcess = true;\n        }\n    }\n    if (needToProcess) {\n        newNsCache = {\n            prefixesFromNamespaceObjects: false,\n            defaultNamespace: nsCache.defaultNamespace,\n            namespaceArray: [],\n            prefixArray: []\n        };\n\n        aa = element.attributesArray;\n        len = aa.length;\n        for (i = 0; i < len; i += 1) {\n            nd = aa[i];\n            if (nd.isNamespaceDeclaration) {\n                if (nd.name.namespace === xmlns && nd.name.localName === \"xmlns\") {\n                    if (nd.value === '') {\n                        newNsCache.defaultNamespace = Ltxml.XNamespace.getNone();\n                    }\n                    else {\n                        newNsCache.defaultNamespace = new Ltxml.XNamespace(nd.value);\n                    }\n                }\n                else {\n                    ns = new Ltxml.XNamespace(nd.value);\n                    prefix = nd.name.localName;\n                    newNsCache.namespaceArray.push(ns);\n                    newNsCache.prefixArray.push(prefix);\n                }\n            }\n        }\n        for (i = 0; i < nsCache.namespaceArray.length; i += 1) {\n            if (newNsCache.namespaceArray.indexOf(nsCache.namespaceArray[i]) === -1) {\n                newNsCache.namespaceArray.push(nsCache.namespaceArray[i]);\n                newNsCache.prefixArray.push(nsCache.prefixArray[i]);\n            }\n        }\n        element.nsCache = newNsCache;\n        na = element.nodesArray;\n        len = na.length;\n        for (j = 0; j < len; j += 1) {\n            el = na[j];\n            if (el.nodeType === 'Element') {\n                annotateElementForNamespaces(el, newNsCache, xmlns, xml, none);\n            }\n        }\n        return;\n    }\n    element.nsCache = nsCache;\n    na = element.nodesArray;\n    len = na.length;\n    for (j = 0; j < len; j += 1) {\n        el = na[j];\n        if (el.nodeType === 'Element') {\n            annotateElementForNamespaces(el, nsCache, xmlns, xml, none);\n        }\n    }\n}\n\nannotateRootForNamespaces = function (rootElement) {\n    var aa, na, len, i, j, nd, newPrefix, newAtt,\n        nsCache, ns, prefix, el, xmlns, none, xml;\n\n    xmlns = Ltxml.XNamespace.getXmlns();\n    none = Ltxml.XNamespace.getNone();\n    xml = Ltxml.XNamespace.getXml();\n    for (ns in Ltxml.namespaceCache) {\n        if (Ltxml.namespaceCache.hasOwnProperty(ns)) {\n            if (Ltxml.namespaceCache[ns].namespaceName) {\n                ns.preferredPrefix = null;\n            }\n        }\n    }\n    prefixCounter = 0;\n    nsCache = {\n        prefixesFromNamespaceObjects: true,\n        defaultNamespace: null,\n        namespaceArray: [],\n        prefixArray: []\n    };\n    aa = rootElement.attributesArray;\n    len = aa.length;\n    for (i = 0; i < len; i += 1) {\n        nd = aa[i];\n        if (nd.isNamespaceDeclaration) {\n            if (nd.name.namespace === xmlns && nd.name.localName === \"xmlns\") {\n                ns = new Ltxml.XNamespace(nd.value);\n                nsCache.defaultNamespace = ns;\n                ns.preferredPrefix = '';\n            }\n            else {\n                ns = new Ltxml.XNamespace(nd.value);\n                prefix = nd.name.localName;\n                ns.preferredPrefix = prefix;\n                nsCache.namespaceArray.push(ns);\n                nsCache.prefixArray.push(prefix);\n            }\n        }\n    }\n    for (i = 0; i < len; i += 1) {\n        nd = aa[i];\n        if (!nd.isNamespaceDeclaration &&\n            nd.name.namespace !== none &&\n            nd.name.namespace !== xml) {\n            if (nsCache.namespaceArray.indexOf(nd.name.namespace) === -1) {\n                while (true) {\n                    newPrefix = \"p\" + prefixCounter;\n                    if (nsCache.prefixArray.indexOf(newPrefix) === -1) {\n                        break;\n                    }\n                    prefixCounter += 1;\n                }\n                newAtt = new Ltxml.XAttribute(Ltxml.XNamespace.getXmlns() + newPrefix,\n                    nd.name.namespace.namespaceName);\n                rootElement.add(newAtt);\n                nsCache.namespaceArray.push(nd.name.namespace);\n                nsCache.prefixArray.push(newPrefix);\n                if (nsCache.prefixesFromNamespaceObjects) {\n                    nd.name.namespace.preferredPrefix = newPrefix;\n                }\n            }\n        }\n    }\n    rootElement.nsCache = nsCache;\n    na = rootElement.nodesArray;\n    len = na.length;\n    for (j = 0; j < len; j += 1) {\n        el = na[j];\n        if (el.nodeType === 'Element') {\n            annotateElementForNamespaces(el, nsCache, xmlns, xml, none);\n        }\n    }\n};\n\nLtxml.XElement.prototype.toString = function (indent) {\n    var clone, o;\n\n    o = getStringBuilder();\n    clone = new Ltxml.XElement(this);\n    annotateRootForNamespaces(clone);\n    clone.serialize(o, indent, 0);\n    return o.toString();\n};\n\n\nLtxml.XElement.load = function (element) {\n    var el = xmlNodeLoad(element);\n    return el;\n};\n\nLtxml.XElement.prototype.getFirstAttribute = function () {\n    if (this.attributesArray.length > 0) {\n        return this.attributesArray[0];\n    }\n    return null;\n};\n\nLtxml.XElement.prototype.getDefaultNamespaceHelper = function () {\n    var attributesToUse, defNamespaceAtt;\n\n    attributesToUse = [].concat(this.attributesArray);\n    defNamespaceAtt = Enumerable\n        .from(attributesToUse)\n        .where(function (a) { return a.isNamespaceDeclaration; })\n        .firstOrDefault(function (a) {\n            return a.name.namespace === Ltxml.XNamespace.getXmlns() &&\n            a.name.localName === \"xmlns\";\n        });\n    return defNamespaceAtt;\n};\n\nLtxml.XElement.prototype.getDefaultNamespace = function (namespace) {\n    var current, dna;\n\n    current = this;\n    while (true) {\n        dna = current.getDefaultNamespaceHelper(namespace);\n        if (dna !== null) {\n            return new Ltxml.XNamespace(dna.value);\n        }\n        current = current.parent;\n        if (current === null || current.nodeType === 'Document') {\n            return Ltxml.XNamespace.getNone();\n        }\n    }\n};\n\nLtxml.XElement.prototype.getNamespaceOfPrefixForThisElement = function (prefix) {\n    var a = Enumerable.from(this.attributesArray)\n        .firstOrDefault(function (a) {\n            return a.isNamespaceDeclaration &&\n                a.name.namespace === Ltxml.XNamespace.getXmlns() &&\n                a.name.localName === prefix;\n        });\n    return a;\n};\n\nLtxml.XElement.prototype.getNamespaceOfPrefix = function (prefix) {\n    var current, ns;\n\n    current = this;\n    while (true) {\n        ns = current.getNamespaceOfPrefixForThisElement(prefix);\n        if (ns !== null) {\n            return ns;\n        }\n        current = current.parent;\n        if (current === null || current.nodeType === 'Document') {\n            return null;\n        }\n    }\n};\n\nprefixCounter = 0;\n\nLtxml.XElement.prototype.getPrefixOfNamespace = function (namespace, isAttribute) {\n    var current, prefix, defaultNamespace, nsCache, getPrefixesFromNamespace, index,\n        newPrefix, newAtt;\n\n    current = this;\n    nsCache = this.nsCache;\n    getPrefixesFromNamespace = nsCache.getPrefixesFromNamespace;\n    if (getPrefixesFromNamespace && namespace.preferredPrefix !== undefined) {\n        return namespace.preferredPrefix;\n    }\n    if (isAttribute === undefined) {\n        isAttribute = false;\n    }\n    if (!isAttribute) {\n        defaultNamespace = nsCache.defaultNamespace;\n        if (namespace === defaultNamespace) {\n            namespace.preferredPrefix = '';\n            return '';\n        }\n    }\n    index = nsCache.namespaceArray.indexOf(namespace);\n    if (index === -1) {\n        while (true) {\n            newPrefix = \"p\" + prefixCounter;\n            if (nsCache.prefixArray.indexOf(newPrefix) === -1) {\n                break;\n            }\n            prefixCounter += 1;\n        }\n        newAtt = new Ltxml.XAttribute(Ltxml.XNamespace.getXmlns() + newPrefix,\n            namespace.namespaceName);\n        this.add(newAtt);\n        nsCache.namespaceArray.push(namespace);\n        nsCache.prefixArray.push(newPrefix);\n        if (nsCache.prefixesFromNamespaceObjects) {\n            namespace.preferredPrefix = newPrefix;\n        }\n        return newPrefix;\n    }\n    prefix = nsCache.prefixArray[index];\n    return prefix;  //ignore jslint\n};\n\nLtxml.XElement.prototype.getHasAttributes = function () {\n    return this.attributesArray && this.attributesArray.length > 0;\n};\n\nLtxml.XElement.prototype.getHasElements = function () {\n    return Enumerable.from(this.nodesArray).any(function (n) {\n        return n.nodeType === 'Element';\n    });\n};\n\nLtxml.XElement.prototype.getIsEmpty = function () {\n    return this.nodesArray.length === 0;\n};\n\nLtxml.XElement.prototype.getLastAttribute = function () {\n    if (this.attributesArray.length > 0) {\n        return this.attributesArray[this.attributesArray.length - 1];\n    }\n    return null;\n};\n\nLtxml.XElement.parse = function (xml) {\n    var xmlDoc, el;\n\n    xmlDoc = parseXml(xml);\n    el = Ltxml.XElement.load(xmlDoc.documentElement);\n    return el;\n};\n\nLtxml.XElement.prototype.removeAll = function () {\n    this.nodesArray = [];\n    this.attributesArray = [];\n};\n\nLtxml.XElement.prototype.removeAttributes = function () {\n    this.attributesArray = [];\n};\n\nLtxml.XElement.prototype.replaceAll = function () {\n    var args, contentToInsert, i;\n\n    args = [];\n    contentToInsert = [];\n\n    args = [];\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    contentToInsert = [];\n    addContent(this,\n        function (c) { contentToInsert.push(c); },\n        function () { throw \"replaceAll: invalid content\"; },\n        args);\n    this.nodesArray = contentToInsert;\n};\n\nLtxml.XElement.prototype.replaceAttributes = function () {\n    var args, contentToInsert, i;\n\n    args = [];\n    contentToInsert = [];\n\n    args = [];\n    for (i = 0; i < arguments.length; i += 1) {\n        args.push(arguments[i]);\n    }\n    contentToInsert = [];\n    addContent(this,\n        function () { throw \"replaceAttributes: invalid content\"; },\n        function (a) { contentToInsert.push(a); },\n        args);\n    this.attributesArray = contentToInsert;\n};\n\nLtxml.XElement.prototype.setAttributeValue = function (xname, value) {\n    var xa;\n\n    if (typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    xa = this.attribute(xname);\n    if (xa !== null) {\n        if (value === null) {\n            if (xa.parent !== null) {\n                xa.remove();\n            }\n            return;\n        }\n        xa.setValue(value);\n        return;\n    }\n    xa = new Ltxml.XAttribute(xname, value);\n    xa.parent = this;\n    this.attributesArray.push(xa);\n};\n\nLtxml.XElement.prototype.setElementValue = function (xname, value) {\n    var xe, nc;\n\n    if (typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    xe = this.element(xname);\n    if (xe !== null) {\n        if (value === null) {\n            if (xe.parent !== null) {\n                xe.remove();\n            }\n            return;\n        }\n        nc = [];\n        addContentThatCanContainEntities(value, xe, true, function (v) {\n            nc.push(v);\n        });\n        xe.nodesArray = nc;\n        return;\n    }\n    xe = new Ltxml.XElement(xname, value);\n    xe.parent = this;\n    this.nodesArray.push(xe);\n};\n\nLtxml.XElement.prototype.setValue = function (value) {\n    var nc = [];\n    addContentThatCanContainEntities(value.toString(), this, true, function (c) {\n        nc.push(c);\n    });\n    this.nodesArray = nc;\n};\n\nLtxml.XElement.prototype.getValue = function () {\n    var returnValue = this\n        .descendantNodes()\n        .where(function (n) {\n            return n.nodeType === 'Text' ||\n            n.nodeType === 'CDATA' ||\n            n.nodeType === 'Entity';\n        })\n        .select(function (n) { return n.value; })\n        .toArray()\n        .join('');\n    return returnValue;\n};\n\nLtxml.XElement.prototype.ancestorsAndSelf = function (xname) {\n    var result, current, self;\n\n    self = this;\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n\n    if (this.lazy) {\n        return Enumerable.Utils.createEnumerable(function () {\n            var current;\n\n            return Enumerable.Utils.createEnumerator(\n                function () {\n                    current = self;\n                },  // initialize\n                function () { // tryGetNext\n                    while (current !== null) {\n                        if (xname && current.name !== xname) {\n                            current = current.parent;\n                        }\n                        else {\n                            var thisOne = current;\n                            current = current.parent;\n                            return this.yieldReturn(thisOne);\n                        }\n                    }\n                    return this.yieldBreak();\n                },\n                Functions.Blank\n            );\n        });\n    }\n    result = [];\n    current = this.parent;\n    if (xname === undefined) {\n        result.push(this);\n        while (current !== null) {\n            result.push(current);\n            current = current.parent;\n        }\n        return Enumerable.from(result);\n    }\n    if (this.name === xname) {\n        result.push(this);\n    }\n    while (current !== null) {\n        if (current.name === xname) {\n            result.push(current);\n        }\n        current = current.parent;\n    }\n    return Enumerable.from(result);\n};\n\nfunction descendantNodesAndSelfHelper(element, pushFunc) {\n    var i;\n\n    for (i = 0; i < element.nodesArray.length; i += 1) {\n        pushFunc(element.nodesArray[i]);\n        if (element.nodesArray[i].nodeType === 'Element' ||\n                element.nodesArray[i].nodeType === 'Document') {\n            descendantNodesAndSelfHelper(element.nodesArray[i], pushFunc);\n        }\n    }\n}\n\nLtxml.XElement.prototype.descendantNodesAndSelf = function () {\n    var result, returnValue;\n\n    if (this.lazy) {\n        returnValue = Enumerable\n            .from(this.nodesArray)\n            .traverseDepthFirst(function (node) {\n                return Enumerable.from(node.nodesArray);\n            });\n        return Enumerable.from([this]).concat(returnValue);\n    }\n\n    result = [];\n    result.push(this);\n    descendantNodesAndSelfHelper(this, function (e) { result.push(e); });\n    return Enumerable.from(result);\n};\n\n// xname is optional\nLtxml.XElement.prototype.descendantsAndSelf = function (xname) {\n    var result, self;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n\n    if (this.lazy) {\n        if (!xname) {\n            self = Enumerable.from([this]);\n        }\n        else {\n            if (xname === this.name) {\n                self = Enumerable.from([this]);\n            }\n            else {\n                self = Enumerable.from([]);\n            }\n        }\n        return self.concat(lazyDescendantHelper(this, xname));\n    }\n    result = [];\n    if (!xname) {\n        result.push(this);\n    }\n    else {\n        if (xname === this.name) {\n            result.push(this);\n        }\n    }\n    eagarDescendantHelper(this, xname, function (e) { result.push(e); });\n    return Enumerable.from(result);\n};\n\nif (Object.defineProperties) {\n\n    Object.defineProperty(Ltxml.XElement.prototype, \"firstAttribute\", {\n        get: function () {\n            return this.getFirstAttribute();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XElement.prototype, \"hasAttributes\", {\n        get: function () {\n            return this.getHasAttributes();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XElement.prototype, \"hasElements\", {\n        get: function () {\n            return this.getHasElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XElement.prototype, \"isEmpty\", {\n        get: function () {\n            return this.getIsEmpty();\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n    Object.defineProperty(Ltxml.XElement.prototype, \"lastAttribute\", {\n        get: function () {\n            return this.getLastAttribute();\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/********************* XProcessingInstruction: XNode *********************/\n\n//new XProcessingInstruction(xprocessingInstruction)\n//new XProcessingInstruction(target, data)\nLtxml.XProcessingInstruction = function (arg1, arg2) {\n    this.nodeType = 'ProcessingInstruction';\n    this.parent = null;\n    this.target = null;\n    this.data = null;\n\n    if (arg1 && arg1.nodeType && arg1.nodeType === 'ProcessingInstruction') {\n        if (arg1.target) {\n            this.target = arg1.target;\n        }\n        if (arg1.data) {\n            this.data = arg1.data;\n        }\n    }\n    else {\n        this.target = arg1;\n        this.data = arg2;\n    }\n};\n\nLtxml.XProcessingInstruction.prototype = new Ltxml.XNode();\n\nLtxml.XProcessingInstruction.prototype.serialize = function (o, indent, depth) {\n    var indent_spaces;\n\n    if (!depth) {\n        depth = 0;\n    }\n    if (indent) {\n        indent_spaces = Ltxml.spaces.substring(0, depth);\n        o.a(indent_spaces).a(\"<?\").a(this.target).a(\" \").a(this.data).a(\"?>\\n\");\n        return;\n    }\n    o.a(\"<?\").a(this.target).a(\" \").a(this.data).a(\"?>\");\n    return;\n};\n\nLtxml.XProcessingInstruction.prototype.toString = function (indent) {\n    var o = getStringBuilder();\n    this.serialize(o, indent);\n    return o.toString();\n};\n\n/********************** XText: XNode **********************/\n\nLtxml.XText = function (arg1) {\n    this.nodeType = 'Text';\n    this.parent = null;\n\n    if (arg1 && arg1.nodeType && arg1.nodeType === 'Text') {\n        // copy constructor\n        this.value = arg1.value.toString();\n    }\n    else {\n        this.value = arg1;\n    }\n\n    // methods\n    this.serialize = function (o) {\n        o.a(this.value);\n    };\n\n    this.toString = function () {\n        return this.value;\n    };\n};\n\nLtxml.XText.prototype = new Ltxml.XNode();\n\n/********************** XEntity: XNode **********************/\n\nLtxml.XEntity = function (arg1) {\n    this.nodeType = 'Entity';\n    this.parent = null;\n\n    if (arg1 && arg1.nodeType && arg1.nodeType === 'Entity') {\n        // copy constructor\n        this.value = arg1.value;\n    }\n    else {\n        if (typeof arg1 === 'string') {\n            this.value = arg1;\n        }\n        else {\n            this.value = arg1.toString();\n        }\n    }\n\n    // methods\n    this.serialize = function (o) {\n        var s = \"&\" + this.value + \";\";\n        o.a(s);\n    };\n\n    this.toString = function () {\n        return \"&\" + this.value + \";\";\n    };\n};\n\nLtxml.XEntity.prototype = new Ltxml.XNode();\n\n/******************* XCData: XText *******************/\n\nLtxml.XCData = function (arg1) {\n    this.nodeType = 'CDATA';\n    this.parent = null;\n\n    if (arg1 && arg1.nodeType && arg1.nodeType === 'CDATA') {\n        // copy constructor\n        this.value = arg1.value.toString();\n    }\n    else {\n        this.value = arg1.toString();\n    }\n};\n\nLtxml.XCData.prototype = new Ltxml.XText();\n\nLtxml.XCData.prototype.serialize = function (o, indent, depth) {\n    var indent_spaces;\n\n    if (!depth) {\n        depth = 0;\n    }\n    if (indent) {\n        indent_spaces = Ltxml.spaces.substring(0, depth);\n        o.a(indent_spaces).a('<![CDATA[').a(this.value).a(']]>\\n');\n        return;\n    }\n    o.a('<![CDATA[').a(this.value).a(']]>');\n    return;\n};\n\nLtxml.XCData.prototype.toString = function (indent) {\n    var o = getStringBuilder();\n    this.serialize(o, indent);\n    return o.toString();\n};\n\n/********************** Extension methods (XEnumerable) **********************/\n\nLtxml.XEnumerable = function (source) {\n    this.source = source;\n    this.isXEnumerable = true;\n};\n\nLtxml.XEnumerable.prototype = new Enumerable();\n\nLtxml.XEnumerable.prototype.getEnumerator = function () {\n    return this.source.getEnumerator();\n};\n\nLtxml.XEnumerable.prototype.asEnumerable = function () {\n    return this.source;\n};\n\nEnumerable.prototype.asXEnumerable = function () {\n    return new Ltxml.XEnumerable(this);\n};\n\nLtxml.XEnumerable.prototype.ancestors = function (xname) {\n    var source, result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType &&\n                    (e.nodeType === 'Element' ||\n                        e.nodeType === 'Comment' ||\n                        e.nodeType === 'ProcessingInstruction' ||\n                        e.nodeType === 'Text' ||\n                        e.nodeType === 'CDATA' ||\n                        e.nodeType === 'Entity')) {\n                    return e.ancestors(xname);\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.ancestorsAndSelf = function (xname) {\n    var source, result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType && e.nodeType === 'Element') {\n                    return e.ancestorsAndSelf(xname);\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.attributes = function (xname) {\n    var source, result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType && e.nodeType === 'Element') {\n                    return e.attributes(xname);\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.descendantNodes = function () {\n    var source, result;\n\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType &&\n                    (e.nodeType === 'Element' ||\n                        e.nodeType === 'Comment' ||\n                        e.nodeType === 'ProcessingInstruction' ||\n                        e.nodeType === 'Text' ||\n                        e.nodeType === 'CDATA' ||\n                        e.nodeType === 'Entity')) {\n                    return e.descendantNodes();\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.descendantNodesAndSelf = function () {\n    var source, result;\n\n    source = this.source ? this.source : this; //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType &&\n                    (e.nodeType === 'Element' ||\n                        e.nodeType === 'Comment' ||\n                        e.nodeType === 'ProcessingInstruction' ||\n                        e.nodeType === 'Text' ||\n                        e.nodeType === 'CDATA' ||\n                        e.nodeType === 'Entity')) {\n                    return e.descendantNodesAndSelf();\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.descendants = function (xname) {\n    var source, result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType && e.nodeType === 'Element') {\n                    return e.descendants(xname);\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.descendantsAndSelf = function (xname) {\n    var source, result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType && e.nodeType === 'Element') {\n                    return e.descendantsAndSelf(xname);\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.elements = function (xname) {\n    var source, result;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType &&\n                    (e.nodeType === 'Element' || e.nodeType === 'Document')) {\n                    return e.elements(xname);\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.InDocumentOrder = function () {\n    throw \"Not implemented\";\n};\n\nLtxml.XEnumerable.prototype.nodes = function () {\n    var source, result;\n\n    source = this.source ? this.source : this;  //ignore jslint\n    result = source\n        .selectMany(\n            function (e) {\n                if (e.nodeType &&\n                    (e.nodeType === 'Element' ||\n                        e.nodeType === 'Document')) {\n                    return e.nodes();\n                }\n                return Enumerable.empty();\n            })\n        .asXEnumerable();\n    return result;\n};\n\nLtxml.XEnumerable.prototype.remove = function (xname) {\n    var source, toRemove, i;\n\n    if (xname && typeof xname === 'string') {\n        xname = new Ltxml.XName(xname);\n    }\n    source = this.source ? this.source : this;  //ignore jslint\n    toRemove = source.toArray();\n    for (i = 0; i < toRemove.length; i += 1) {\n        if (xname === undefined) {\n            toRemove[i].remove();\n        }\n        else {\n            if (toRemove[i].name && toRemove[i].name === xname) {\n                toRemove[i].remove();\n            }\n        }\n    }\n};\n\nmodule.exports = Ltxml;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ltxml.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"Enumerable\",\"amd\":\"linq\",\"commonjs\":\"linq\",\"commonjs2\":\"linq\"}\n ** module id = 1\n ** module chunks = 0\n **/","function DOMParser(options){\r\n\tthis.options = options ||{locator:{}};\r\n\t\r\n}\r\nDOMParser.prototype.parseFromString = function(source,mimeType){\t\r\n\tvar options = this.options;\r\n\tvar sax =  new XMLReader();\r\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\r\n\tvar errorHandler = options.errorHandler;\r\n\tvar locator = options.locator;\r\n\tvar defaultNSMap = options.xmlns||{};\r\n\tvar entityMap = {'lt':'<','gt':'>','amp':'&','quot':'\"','apos':\"'\"}\r\n\tif(locator){\r\n\t\tdomBuilder.setDocumentLocator(locator)\r\n\t}\r\n\t\r\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\r\n\tsax.domBuilder = options.domBuilder || domBuilder;\r\n\tif(/\\/x?html?$/.test(mimeType)){\r\n\t\tentityMap.nbsp = '\\xa0';\r\n\t\tentityMap.copy = '\\xa9';\r\n\t\tdefaultNSMap['']= 'http://www.w3.org/1999/xhtml';\r\n\t}\r\n\tif(source){\r\n\t\tsax.parse(source,defaultNSMap,entityMap);\r\n\t}else{\r\n\t\tsax.errorHandler.error(\"invalid document source\");\r\n\t}\r\n\treturn domBuilder.document;\r\n}\r\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\r\n\tif(!errorImpl){\r\n\t\tif(domBuilder instanceof DOMHandler){\r\n\t\t\treturn domBuilder;\r\n\t\t}\r\n\t\terrorImpl = domBuilder ;\r\n\t}\r\n\tvar errorHandler = {}\r\n\tvar isCallback = errorImpl instanceof Function;\r\n\tlocator = locator||{}\r\n\tfunction build(key){\r\n\t\tvar fn = errorImpl[key];\r\n\t\tif(!fn){\r\n\t\t\tif(isCallback){\r\n\t\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\r\n\t\t\t}else{\r\n\t\t\t\tvar i=arguments.length;\r\n\t\t\t\twhile(--i){\r\n\t\t\t\t\tif(fn = errorImpl[arguments[i]]){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\terrorHandler[key] = fn && function(msg){\r\n\t\t\tfn(msg+_locator(locator));\r\n\t\t}||function(){};\r\n\t}\r\n\tbuild('warning','warn');\r\n\tbuild('error','warn','warning');\r\n\tbuild('fatalError','warn','warning','error');\r\n\treturn errorHandler;\r\n}\r\n/**\r\n * +ContentHandler+ErrorHandler\r\n * +LexicalHandler+EntityResolver2\r\n * -DeclHandler-DTDHandler \r\n * \r\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\r\n */\r\nfunction DOMHandler() {\r\n    this.cdata = false;\r\n}\r\nfunction position(locator,node){\r\n\tnode.lineNumber = locator.lineNumber;\r\n\tnode.columnNumber = locator.columnNumber;\r\n}\r\n/**\r\n * @see org.xml.sax.ContentHandler#startDocument\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\r\n */ \r\nDOMHandler.prototype = {\r\n\tstartDocument : function() {\r\n    \tthis.document = new DOMImplementation().createDocument(null, null, null);\r\n    \tif (this.locator) {\r\n        \tthis.document.documentURI = this.locator.systemId;\r\n    \t}\r\n\t},\r\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\r\n\t\tvar doc = this.document;\r\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\r\n\t    var len = attrs.length;\r\n\t    appendElement(this, el);\r\n\t    this.currentElement = el;\r\n\t    \r\n\t\tthis.locator && position(this.locator,el)\r\n\t    for (var i = 0 ; i < len; i++) {\r\n\t        var namespaceURI = attrs.getURI(i);\r\n\t        var value = attrs.getValue(i);\r\n\t        var qName = attrs.getQName(i);\r\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\r\n\t\t\tif( attr.getOffset){\r\n\t\t\t\tposition(attr.getOffset(1),attr)\r\n\t\t\t}\r\n\t\t\tattr.value = attr.nodeValue = value;\r\n\t\t\tel.setAttributeNode(attr)\r\n\t    }\r\n\t},\r\n\tendElement:function(namespaceURI, localName, qName) {\r\n\t\tvar current = this.currentElement\r\n\t    var tagName = current.tagName;\r\n\t    this.currentElement = current.parentNode;\r\n\t},\r\n\tstartPrefixMapping:function(prefix, uri) {\r\n\t},\r\n\tendPrefixMapping:function(prefix) {\r\n\t},\r\n\tprocessingInstruction:function(target, data) {\r\n\t    var ins = this.document.createProcessingInstruction(target, data);\r\n\t    this.locator && position(this.locator,ins)\r\n\t    appendElement(this, ins);\r\n\t},\r\n\tignorableWhitespace:function(ch, start, length) {\r\n\t},\r\n\tcharacters:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t\t//console.log(chars)\r\n\t\tif(this.currentElement && chars){\r\n\t\t\tif (this.cdata) {\r\n\t\t\t\tvar charNode = this.document.createCDATASection(chars);\r\n\t\t\t\tthis.currentElement.appendChild(charNode);\r\n\t\t\t} else {\r\n\t\t\t\tvar charNode = this.document.createTextNode(chars);\r\n\t\t\t\tthis.currentElement.appendChild(charNode);\r\n\t\t\t}\r\n\t\t\tthis.locator && position(this.locator,charNode)\r\n\t\t}\r\n\t},\r\n\tskippedEntity:function(name) {\r\n\t},\r\n\tendDocument:function() {\r\n\t\tthis.document.normalize();\r\n\t},\r\n\tsetDocumentLocator:function (locator) {\r\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\r\n\t    \tlocator.lineNumber = 0;\r\n\t    }\r\n\t},\r\n\t//LexicalHandler\r\n\tcomment:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t    var comm = this.document.createComment(chars);\r\n\t    this.locator && position(this.locator,comm)\r\n\t    appendElement(this, comm);\r\n\t},\r\n\t\r\n\tstartCDATA:function() {\r\n\t    //used in characters() methods\r\n\t    this.cdata = true;\r\n\t},\r\n\tendCDATA:function() {\r\n\t    this.cdata = false;\r\n\t},\r\n\t\r\n\tstartDTD:function(name, publicId, systemId) {\r\n\t\tvar impl = this.document.implementation;\r\n\t    if (impl && impl.createDocumentType) {\r\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\r\n\t        this.locator && position(this.locator,dt)\r\n\t        appendElement(this, dt);\r\n\t    }\r\n\t},\r\n\t/**\r\n\t * @see org.xml.sax.ErrorHandler\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\r\n\t */\r\n\twarning:function(error) {\r\n\t\tconsole.warn(error,_locator(this.locator));\r\n\t},\r\n\terror:function(error) {\r\n\t\tconsole.error(error,_locator(this.locator));\r\n\t},\r\n\tfatalError:function(error) {\r\n\t\tconsole.error(error,_locator(this.locator));\r\n\t    throw error;\r\n\t}\r\n}\r\nfunction _locator(l){\r\n\tif(l){\r\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\r\n\t}\r\n}\r\nfunction _toString(chars,start,length){\r\n\tif(typeof chars == 'string'){\r\n\t\treturn chars.substr(start,length)\r\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\r\n\t\tif(chars.length >= start+length || start){\r\n\t\t\treturn new java.lang.String(chars,start,length)+'';\r\n\t\t}\r\n\t\treturn chars;\r\n\t}\r\n}\r\n\r\n/*\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\r\n * used method of org.xml.sax.ext.LexicalHandler:\r\n *  #comment(chars, start, length)\r\n *  #startCDATA()\r\n *  #endCDATA()\r\n *  #startDTD(name, publicId, systemId)\r\n *\r\n *\r\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\r\n *  #endDTD()\r\n *  #startEntity(name)\r\n *  #endEntity(name)\r\n *\r\n *\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\r\n * IGNORED method of org.xml.sax.ext.DeclHandler\r\n * \t#attributeDecl(eName, aName, type, mode, value)\r\n *  #elementDecl(name, model)\r\n *  #externalEntityDecl(name, publicId, systemId)\r\n *  #internalEntityDecl(name, value)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\r\n * IGNORED method of org.xml.sax.EntityResolver2\r\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\r\n *  #resolveEntity(publicId, systemId)\r\n *  #getExternalSubset(name, baseURI)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\r\n * IGNORED method of org.xml.sax.DTDHandler\r\n *  #notationDecl(name, publicId, systemId) {};\r\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\r\n */\r\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\r\n\tDOMHandler.prototype[key] = function(){return null}\r\n})\r\n\r\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\r\nfunction appendElement (hander,node) {\r\n    if (!hander.currentElement) {\r\n        hander.document.appendChild(node);\r\n    } else {\r\n        hander.currentElement.appendChild(node);\r\n    }\r\n}//appendChild and setAttributeNS are preformance key\r\n\r\nif(typeof require == 'function'){\r\n\tvar XMLReader = require('./sax').XMLReader;\r\n\tvar DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;\r\n\texports.XMLSerializer = require('./dom').XMLSerializer ;\r\n\texports.DOMParser = DOMParser;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xmldom/dom-parser.js\n ** module id = 2\n ** module chunks = 0\n **/","//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\r\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\r\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\r\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\r\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\u00B7\\u0300-\\u036F\\\\ux203F-\\u2040]\");\r\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\r\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\r\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\r\n\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_V\r\n//S_ATTR_S,\tS_E,\tS_S,\tS_C\r\nvar S_TAG = 0;//tag name offerring\r\nvar S_ATTR = 1;//attr name offerring \r\nvar S_ATTR_S=2;//attr name end and space offer\r\nvar S_EQ = 3;//=space?\r\nvar S_V = 4;//attr value(no quot value only)\r\nvar S_E = 5;//attr value end and no space(quot end)\r\nvar S_S = 6;//(attr value end || tag end ) && (space offer)\r\nvar S_C = 7;//closed el<el />\r\n\r\nfunction XMLReader(){\r\n\t\r\n}\r\n\r\nXMLReader.prototype = {\r\n\tparse:function(source,defaultNSMap,entityMap){\r\n\t\tvar domBuilder = this.domBuilder;\r\n\t\tdomBuilder.startDocument();\r\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\r\n\t\tparse(source,defaultNSMap,entityMap,\r\n\t\t\t\tdomBuilder,this.errorHandler);\r\n\t\tdomBuilder.endDocument();\r\n\t}\r\n}\r\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\r\n  function fixedFromCharCode(code) {\r\n\t\t// String.prototype.fromCharCode does not supports\r\n\t\t// > 2 bytes unicode chars directly\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\r\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\r\n\r\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\r\n\t\t} else {\r\n\t\t\treturn String.fromCharCode(code);\r\n\t\t}\r\n\t}\r\n\tfunction entityReplacer(a){\r\n\t\tvar k = a.slice(1,-1);\r\n\t\tif(k in entityMap){\r\n\t\t\treturn entityMap[k]; \r\n\t\t}else if(k.charAt(0) === '#'){\r\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\r\n\t\t}else{\r\n\t\t\terrorHandler.error('entity not found:'+a);\r\n\t\t\treturn a;\r\n\t\t}\r\n\t}\r\n\tfunction appendText(end){//has some bugs\r\n\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\tlocator&&position(start);\r\n\t\tdomBuilder.characters(xt,0,end-start);\r\n\t\tstart = end\r\n\t}\r\n\tfunction position(start,m){\r\n\t\twhile(start>=endPos && (m = linePattern.exec(source))){\r\n\t\t\tstartPos = m.index;\r\n\t\t\tendPos = startPos + m[0].length;\r\n\t\t\tlocator.lineNumber++;\r\n\t\t\t//console.log('line++:',locator,startPos,endPos)\r\n\t\t}\r\n\t\tlocator.columnNumber = start-startPos+1;\r\n\t}\r\n\tvar startPos = 0;\r\n\tvar endPos = 0;\r\n\tvar linePattern = /.+(?:\\r\\n?|\\n)|.*$/g\r\n\tvar locator = domBuilder.locator;\r\n\t\r\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\r\n\tvar closeMap = {};\r\n\tvar start = 0;\r\n\twhile(true){\r\n\t\tvar i = source.indexOf('<',start);\r\n\t\tif(i<0){\r\n\t\t\tif(!source.substr(start).match(/^\\s*$/)){\r\n\t\t\t\tvar doc = domBuilder.document;\r\n    \t\t\tvar text = doc.createTextNode(source.substr(start));\r\n    \t\t\tdoc.appendChild(text);\r\n    \t\t\tdomBuilder.currentElement = text;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(i>start){\r\n\t\t\tappendText(i);\r\n\t\t}\r\n\t\tswitch(source.charAt(i+1)){\r\n\t\tcase '/':\r\n\t\t\tvar end = source.indexOf('>',i+3);\r\n\t\t\tvar tagName = source.substring(i+2,end);\r\n\t\t\tvar config = parseStack.pop();\r\n\t\t\tvar localNSMap = config.localNSMap;\r\n\t\t\t\r\n\t        if(config.tagName != tagName){\r\n\t            errorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName );\r\n\t        }\r\n\t\t\tdomBuilder.endElement(config.uri,config.localName,tagName);\r\n\t\t\tif(localNSMap){\r\n\t\t\t\tfor(var prefix in localNSMap){\r\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tend++;\r\n\t\t\tbreak;\r\n\t\t\t// end elment\r\n\t\tcase '?':// <?...?>\r\n\t\t\tlocator&&position(i);\r\n\t\t\tend = parseInstruction(source,i,domBuilder);\r\n\t\t\tbreak;\r\n\t\tcase '!':// <!doctype,<![CDATA,<!--\r\n\t\t\tlocator&&position(i);\r\n\t\t\tend = parseDCC(source,i,domBuilder,errorHandler);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\ttry{\r\n\t\t\t\tlocator&&position(i);\r\n\t\t\t\t\r\n\t\t\t\tvar el = new ElementAttributes();\r\n\t\t\t\t\r\n\t\t\t\t//elStartEnd\r\n\t\t\t\tvar end = parseElementStartPart(source,i,el,entityReplacer,errorHandler);\r\n\t\t\t\tvar len = el.length;\r\n\t\t\t\t//position fixed\r\n\t\t\t\tif(len && locator){\r\n\t\t\t\t\tvar backup = copyLocator(locator,{});\r\n\t\t\t\t\tfor(var i = 0;i<len;i++){\r\n\t\t\t\t\t\tvar a = el[i];\r\n\t\t\t\t\t\tposition(a.offset);\r\n\t\t\t\t\t\ta.offset = copyLocator(locator,{});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcopyLocator(backup,locator);\r\n\t\t\t\t}\r\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\r\n\t\t\t\t\tel.closed = true;\r\n\t\t\t\t\tif(!entityMap.nbsp){\r\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tappendElement(el,domBuilder,parseStack);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){\r\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tend++;\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\terrorHandler.error('element parse error: '+e);\r\n\t\t\t\tend = -1;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tif(end<0){\r\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\r\n\t\t\tappendText(i+1);\r\n\t\t}else{\r\n\t\t\tstart = end;\r\n\t\t}\r\n\t}\r\n}\r\nfunction copyLocator(f,t){\r\n\tt.lineNumber = f.lineNumber;\r\n\tt.columnNumber = f.columnNumber;\r\n\treturn t;\r\n\t\r\n}\r\n\r\n/**\r\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\r\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\r\n */\r\nfunction parseElementStartPart(source,start,el,entityReplacer,errorHandler){\r\n\tvar attrName;\r\n\tvar value;\r\n\tvar p = ++start;\r\n\tvar s = S_TAG;//status\r\n\twhile(true){\r\n\t\tvar c = source.charAt(p);\r\n\t\tswitch(c){\r\n\t\tcase '=':\r\n\t\t\tif(s === S_ATTR){//attrName\r\n\t\t\t\tattrName = source.slice(start,p);\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else if(s === S_ATTR_S){\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\r\n\t\t\t\tthrow new Error('attribute equal must after attrName');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '\\'':\r\n\t\tcase '\"':\r\n\t\t\tif(s === S_EQ){//equal\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\tp = source.indexOf(c,start)\r\n\t\t\t\tif(p>0){\r\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\tel.add(attrName,value,start-1);\r\n\t\t\t\t\ts = S_E;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//fatalError: no end quot match\r\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\r\n\t\t\t\t}\r\n\t\t\t}else if(s == S_V){\r\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t//console.log(attrName,value,start,p)\r\n\t\t\t\tel.add(attrName,value,start);\r\n\t\t\t\t//console.dir(el)\r\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\ts = S_E\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: no equal before\r\n\t\t\t\tthrow new Error('attribute value must after \"=\"');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '/':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_E:\r\n\t\t\tcase S_S:\r\n\t\t\tcase S_C:\r\n\t\t\t\ts = S_C;\r\n\t\t\t\tel.closed = true;\r\n\t\t\tcase S_V:\r\n\t\t\tcase S_ATTR:\r\n\t\t\tcase S_ATTR_S:\r\n\t\t\t\tbreak;\r\n\t\t\t//case S_EQ:\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\")\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase ''://end document\r\n\t\t\t//throw new Error('unexpected end of input')\r\n\t\t\terrorHandler.error('unexpected end of input');\r\n\t\tcase '>':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_E:\r\n\t\t\tcase S_S:\r\n\t\t\tcase S_C:\r\n\t\t\t\tbreak;//normal\r\n\t\t\tcase S_V://Compatible state\r\n\t\t\tcase S_ATTR:\r\n\t\t\t\tvalue = source.slice(start,p);\r\n\t\t\t\tif(value.slice(-1) === '/'){\r\n\t\t\t\t\tel.closed  = true;\r\n\t\t\t\t\tvalue = value.slice(0,-1)\r\n\t\t\t\t}\r\n\t\t\tcase S_ATTR_S:\r\n\t\t\t\tif(s === S_ATTR_S){\r\n\t\t\t\t\tvalue = attrName;\r\n\t\t\t\t}\r\n\t\t\t\tif(s == S_V){\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\tel.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)\r\n\t\t\t\t}else{\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\r\n\t\t\t\t\tel.add(value,value,start)\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase S_EQ:\r\n\t\t\t\tthrow new Error('attribute value missed!!');\r\n\t\t\t}\r\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\r\n\t\t\treturn p;\r\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\r\n\t\tcase '\\u0080':\r\n\t\t\tc = ' ';\r\n\t\tdefault:\r\n\t\t\tif(c<= ' '){//space\r\n\t\t\t\tswitch(s){\r\n\t\t\t\tcase S_TAG:\r\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\r\n\t\t\t\t\ts = S_S;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR:\r\n\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t\ts = S_ATTR_S;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_V:\r\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\tel.add(attrName,value,start)\r\n\t\t\t\tcase S_E:\r\n\t\t\t\t\ts = S_S;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//case S_S:\r\n\t\t\t\t//case S_EQ:\r\n\t\t\t\t//case S_ATTR_S:\r\n\t\t\t\t//\tvoid();break;\r\n\t\t\t\t//case S_C:\r\n\t\t\t\t\t//ignore warning\r\n\t\t\t\t}\r\n\t\t\t}else{//not space\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_V\r\n//S_ATTR_S,\tS_E,\tS_S,\tS_C\r\n\t\t\t\tswitch(s){\r\n\t\t\t\t//case S_TAG:void();break;\r\n\t\t\t\t//case S_ATTR:void();break;\r\n\t\t\t\t//case S_V:void();break;\r\n\t\t\t\tcase S_ATTR_S:\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead!!')\r\n\t\t\t\t\tel.add(attrName,attrName,start);\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_E:\r\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\r\n\t\t\t\tcase S_S:\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_EQ:\r\n\t\t\t\t\ts = S_V;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_C:\r\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tp++;\r\n\t}\r\n}\r\n/**\r\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\r\n */\r\nfunction appendElement(el,domBuilder,parseStack){\r\n\tvar tagName = el.tagName;\r\n\tvar localNSMap = null;\r\n\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\tvar a = el[i];\r\n\t\tvar qName = a.qName;\r\n\t\tvar value = a.value;\r\n\t\tvar nsp = qName.indexOf(':');\r\n\t\tif(nsp>0){\r\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\r\n\t\t\tvar localName = qName.slice(nsp+1);\r\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\r\n\t\t}else{\r\n\t\t\tlocalName = qName;\r\n\t\t\tprefix = null\r\n\t\t\tnsPrefix = qName === 'xmlns' && ''\r\n\t\t}\r\n\t\t//can not set prefix,because prefix !== ''\r\n\t\ta.localName = localName ;\r\n\t\t//prefix == null for no ns prefix attribute \r\n\t\tif(nsPrefix !== false){//hack!!\r\n\t\t\tif(localNSMap == null){\r\n\t\t\t\tlocalNSMap = {}\r\n\t\t\t\t//console.log(currentNSMap,0)\r\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\r\n\t\t\t\t//console.log(currentNSMap,1)\r\n\t\t\t}\r\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\r\n\t\t\ta.uri = 'http://www.w3.org/2000/xmlns/'\r\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \r\n\t\t}\r\n\t}\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\ta = el[i];\r\n\t\tvar prefix = a.prefix;\r\n\t\tif(prefix){//no prefix attribute has no namespace\r\n\t\t\tif(prefix === 'xml'){\r\n\t\t\t\ta.uri = 'http://www.w3.org/XML/1998/namespace';\r\n\t\t\t}if(prefix !== 'xmlns'){\r\n\t\t\t\ta.uri = currentNSMap[prefix]\r\n\t\t\t\t\r\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar nsp = tagName.indexOf(':');\r\n\tif(nsp>0){\r\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\r\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\r\n\t}else{\r\n\t\tprefix = null;//important!!\r\n\t\tlocalName = el.localName = tagName;\r\n\t}\r\n\t//no prefix element has default namespace\r\n\tvar ns = el.uri = currentNSMap[prefix || ''];\r\n\tdomBuilder.startElement(ns,localName,tagName,el);\r\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\r\n\t//localNSMap = null\r\n\tif(el.closed){\r\n\t\tdomBuilder.endElement(ns,localName,tagName);\r\n\t\tif(localNSMap){\r\n\t\t\tfor(prefix in localNSMap){\r\n\t\t\t\tdomBuilder.endPrefixMapping(prefix) \r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tel.currentNSMap = currentNSMap;\r\n\t\tel.localNSMap = localNSMap;\r\n\t\tparseStack.push(el);\r\n\t}\r\n}\r\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\r\n\tif(/^(?:script|textarea)$/i.test(tagName)){\r\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\r\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\r\n\t\tif(/[&<]/.test(text)){\r\n\t\t\tif(/^script$/i.test(tagName)){\r\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\r\n\t\t\t\t\t//lexHandler.startCDATA();\r\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\t\t//lexHandler.endCDATA();\r\n\t\t\t\t\treturn elEndStart;\r\n\t\t\t\t//}\r\n\t\t\t}//}else{//text area\r\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\treturn elEndStart;\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\treturn elStartEnd+1;\r\n}\r\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\r\n\t//if(tagName in closeMap){\r\n\tvar pos = closeMap[tagName];\r\n\tif(pos == null){\r\n\t\t//console.log(tagName)\r\n\t\tpos = closeMap[tagName] = source.lastIndexOf('</'+tagName+'>')\r\n\t}\r\n\treturn pos<elStartEnd;\r\n\t//} \r\n}\r\nfunction _copy(source,target){\r\n\tfor(var n in source){target[n] = source[n]}\r\n}\r\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\r\n\tvar next= source.charAt(start+2)\r\n\tswitch(next){\r\n\tcase '-':\r\n\t\tif(source.charAt(start + 3) === '-'){\r\n\t\t\tvar end = source.indexOf('-->',start+4);\r\n\t\t\t//append comment source.substring(4,end)//<!--\r\n\t\t\tif(end>start){\r\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\r\n\t\t\t\treturn end+3;\r\n\t\t\t}else{\r\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\tdefault:\r\n\t\tif(source.substr(start+3,6) == 'CDATA['){\r\n\t\t\tvar end = source.indexOf(']]>',start+9);\r\n\t\t\tdomBuilder.startCDATA();\r\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\r\n\t\t\tdomBuilder.endCDATA() \r\n\t\t\treturn end+3;\r\n\t\t}\r\n\t\t//<!DOCTYPE\r\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \r\n\t\tvar matchs = split(source,start);\r\n\t\tvar len = matchs.length;\r\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\r\n\t\t\tvar name = matchs[1][0];\r\n\t\t\tvar pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]\r\n\t\t\tvar sysid = len>4 && matchs[4][0];\r\n\t\t\tvar lastMatch = matchs[len-1]\r\n\t\t\tdomBuilder.startDTD(name,pubid && pubid.replace(/^(['\"])(.*?)\\1$/,'$2'),\r\n\t\t\t\t\tsysid && sysid.replace(/^(['\"])(.*?)\\1$/,'$2'));\r\n\t\t\tdomBuilder.endDTD();\r\n\t\t\t\r\n\t\t\treturn lastMatch.index+lastMatch[0].length\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n\r\n\r\nfunction parseInstruction(source,start,domBuilder){\r\n\tvar end = source.indexOf('?>',start);\r\n\tif(end){\r\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\r\n\t\tif(match){\r\n\t\t\tvar len = match[0].length;\r\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\r\n\t\t\treturn end+2;\r\n\t\t}else{//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * @param source\r\n */\r\nfunction ElementAttributes(source){\r\n\t\r\n}\r\nElementAttributes.prototype = {\r\n\tsetTagName:function(tagName){\r\n\t\tif(!tagNamePattern.test(tagName)){\r\n\t\t\tthrow new Error('invalid tagName:'+tagName)\r\n\t\t}\r\n\t\tthis.tagName = tagName\r\n\t},\r\n\tadd:function(qName,value,offset){\r\n\t\tif(!tagNamePattern.test(qName)){\r\n\t\t\tthrow new Error('invalid attribute:'+qName)\r\n\t\t}\r\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\r\n\t},\r\n\tlength:0,\r\n\tgetLocalName:function(i){return this[i].localName},\r\n\tgetOffset:function(i){return this[i].offset},\r\n\tgetQName:function(i){return this[i].qName},\r\n\tgetURI:function(i){return this[i].uri},\r\n\tgetValue:function(i){return this[i].value}\r\n//\t,getIndex:function(uri, localName)){\r\n//\t\tif(localName){\r\n//\t\t\t\r\n//\t\t}else{\r\n//\t\t\tvar qName = uri\r\n//\t\t}\r\n//\t},\r\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\r\n//\tgetType:function(uri,localName){}\r\n//\tgetType:function(i){},\r\n}\r\n\r\n\r\n\r\n\r\nfunction _set_proto_(thiz,parent){\r\n\tthiz.__proto__ = parent;\r\n\treturn thiz;\r\n}\r\nif(!(_set_proto_({},_set_proto_.prototype) instanceof _set_proto_)){\r\n\t_set_proto_ = function(thiz,parent){\r\n\t\tfunction p(){};\r\n\t\tp.prototype = parent;\r\n\t\tp = new p();\r\n\t\tfor(parent in thiz){\r\n\t\t\tp[parent] = thiz[parent];\r\n\t\t}\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nfunction split(source,start){\r\n\tvar match;\r\n\tvar buf = [];\r\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\r\n\treg.lastIndex = start;\r\n\treg.exec(source);//skip <\r\n\twhile(match = reg.exec(source)){\r\n\t\tbuf.push(match);\r\n\t\tif(match[1])return buf;\r\n\t}\r\n}\r\n\r\nif(typeof require == 'function'){\r\n\texports.XMLReader = XMLReader;\r\n}\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xmldom/sax.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n */\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tdest[p] = src[p];\n\t}\n}\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(Object.create){\n\t\tvar ppt = Object.create(Super.prototype)\n\t\tpt.__proto__ = ppt;\n\t}\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknow Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\nvar htmlns = 'http://www.w3.org/1999/xhtml' ;\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0, \n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long \n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t}\n};\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n/**\n * \n * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities \n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow DOMException(NOT_FOUND_ERR,new Error())\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t\t\n\t\t\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n/**\n * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490\n */\nfunction DOMImplementation(/* Object */ features) {\n\tthis._features = {};\n\tif (features) {\n\t\tfor (var feature in features) {\n\t\t\t this._features = features[feature];\n\t\t}\n\t}\n};\n\nDOMImplementation.prototype = {\n\thasFeature: function(/* string */ feature, /* string */ version) {\n\t\tvar versions = this._features[feature.toLowerCase()];\n\t\tif (versions && (!version || version in versions)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR\n\t\tvar doc = new Document();\n\t\tdoc.doctype = doctype;\n\t\tif(doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tif(qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI,qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId;\n\t\tnode.systemId = systemId;\n\t\t// Introduced in DOM Level 2:\n\t\t//readonly attribute DOMString        internalSubset;\n\t\t\n\t\t//TODO:..\n\t\t//  readonly attribute NamedNodeMap     entities;\n\t\t//  readonly attribute NamedNodeMap     notations;\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises \n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises \n\t\tthis.insertBefore(newChild,oldChild);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n    \t\t\t\tif(map[n] == namespaceURI){\n    \t\t\t\t\treturn n;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == 2?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == 2?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n}\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n * \n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n/**\n * preformance key(refChild == null)\n */\nfunction _insertBefore(parentNode,newChild,nextChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tcp.removeChild(newChild);//remove and update\n\t}\n\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = newChild.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn newChild;\n\t\t}\n\t\tvar newLast = newChild.lastChild;\n\t}else{\n\t\tnewFirst = newLast = newChild;\n\t}\n\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = nextChild;\n\t\n\t\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparentNode.firstChild = newFirst;\n\t}\n\tif(nextChild == null){\n\t\tparentNode.lastChild = newLast;\n\t}else{\n\t\tnextChild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parentNode;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t//console.log(parentNode.lastChild.nextSibling == null)\n\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnewChild.firstChild = newChild.lastChild = null;\n\t}\n\treturn newChild;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tvar pre = parentNode.lastChild;\n\t\tcp.removeChild(newChild);//remove and update\n\t\tvar pre = parentNode.lastChild;\n\t}\n\tvar pre = parentNode.lastChild;\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = pre;\n\tnewChild.nextSibling = null;\n\tif(pre){\n\t\tpre.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n\t//console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n}\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\t\n\tinsertBefore :  function(newChild, refChild){//raises \n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\tif(this.documentElement == null && newChild.nodeType == 1){\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t\t\n\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == 1){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\t\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\t\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\t\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\t\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && node.namespaceURI === namespaceURI && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\t\n\t},\n\tappendChild:function(newChild){\n\t\t//if(!(newChild instanceof CharacterData)){\n\t\t\tthrow new Error(ExceptionMessage[3])\n\t\t//}\n\t\treturn Node.prototype.appendChild.apply(this,arguments)\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node){\n\tvar buf = [];\n\tserializeToString(node,buf);\n\treturn buf.join('');\n}\nNode.prototype.toString =function(){\n\treturn XMLSerializer.prototype.serializeToString(this);\n}\nfunction serializeToString(node,buf){\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\t\tvar isHTML = htmlns === node.namespaceURI\n\t\tbuf.push('<',nodeName);\n\t\tfor(var i=0;i<len;i++){\n\t\t\tserializeToString(attrs.item(i),buf,isHTML);\n\t\t}\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\tif(child){\n\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child,buf);\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',nodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child,buf);\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn buf.push(' ',node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');\n\tcase TEXT_NODE:\n\t\treturn buf.push(node.data.replace(/[<&]/g,_xmlEncoder));\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC \"',pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push( '\" \"',sysid);\n\t\t\t}\n\t\t\tbuf.push('\">');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM \"',sysid,'\">');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor(var n in node){\n\t\tvar v = node[n];\n\t\tif(typeof v != 'object' ){\n\t\t\tif(v != node2[n]){\n\t\t\t\tnode2[n] = v;\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase 1:\n\t\t\t\tcase 11:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//TODO:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase 1:\n\t\t\tcase 11:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\nif(typeof require == 'function'){\n\texports.DOMImplementation = DOMImplementation;\n\texports.XMLSerializer = XMLSerializer;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xmldom/dom.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}